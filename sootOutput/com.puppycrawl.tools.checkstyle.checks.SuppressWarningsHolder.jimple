public class com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder extends com.puppycrawl.tools.checkstyle.api.Check
{
    public static final java.lang.String CHECKSTYLE_PREFIX;
    private static final java.lang.String JAVA_LANG_PREFIX;
    private static final java.lang.String CHECK_SUFFIX;
    private static final java.util.Map CHECK_ALIAS_MAP;
    private static final java.lang.ThreadLocal ENTRIES;

    public void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.api.Check: void <init>()>();

        return;
    }

    public static java.lang.String getDefaultAlias(java.lang.String)
    {
        java.lang.String aSourceName, $r0, $r1, $r2;
        int startIndex, endIndex, $i0, $i1;
        boolean $z0;

        aSourceName := @parameter0: java.lang.String;

        $i0 = virtualinvoke aSourceName.<java.lang.String: int lastIndexOf(int)>(46);

        startIndex = $i0 + 1;

        endIndex = virtualinvoke aSourceName.<java.lang.String: int length()>();

        $z0 = virtualinvoke aSourceName.<java.lang.String: boolean endsWith(java.lang.String)>("Check");

        if $z0 == 0 goto label1;

        $r2 = "Check";

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        endIndex = endIndex - $i1;

     label1:
        $r0 = virtualinvoke aSourceName.<java.lang.String: java.lang.String substring(int,int)>(startIndex, endIndex);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        return $r1;
    }

    public static java.lang.String getAlias(java.lang.String)
    {
        java.lang.String aSourceName, checkAlias;
        java.util.Map $r0;
        java.lang.Object $r1;

        aSourceName := @parameter0: java.lang.String;

        $r0 = <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.util.Map CHECK_ALIAS_MAP>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(aSourceName);

        checkAlias = (java.lang.String) $r1;

        if checkAlias != null goto label1;

        checkAlias = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String getDefaultAlias(java.lang.String)>(aSourceName);

     label1:
        return checkAlias;
    }

    public static void registerAlias(java.lang.String, java.lang.String)
    {
        java.lang.String aSourceName, aCheckAlias;
        java.util.Map $r0;

        aSourceName := @parameter0: java.lang.String;

        aCheckAlias := @parameter1: java.lang.String;

        $r0 = <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.util.Map CHECK_ALIAS_MAP>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(aSourceName, aCheckAlias);

        return;
    }

    public void setAliasList(java.lang.String)
    {
        com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder this;
        java.lang.String aAliasList, sourceAlias, $r4, $r5, $r6;
        java.lang.String[] arr$;
        int len$, i$, index, $i0, $i1;
        org.apache.commons.beanutils.ConversionException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;

        this := @this: com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder;

        aAliasList := @parameter0: java.lang.String;

        arr$ = virtualinvoke aAliasList.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        len$ = lengthof arr$;

        i$ = 0;

     label1:
        if i$ >= len$ goto label4;

        sourceAlias = arr$[i$];

        index = virtualinvoke sourceAlias.<java.lang.String: int indexOf(java.lang.String)>("=");

        if index <= 0 goto label2;

        $r5 = virtualinvoke sourceAlias.<java.lang.String: java.lang.String substring(int,int)>(0, index);

        $i1 = index + 1;

        $r6 = virtualinvoke sourceAlias.<java.lang.String: java.lang.String substring(int)>($i1);

        staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: void registerAlias(java.lang.String,java.lang.String)>($r5, $r6);

        goto label3;

     label2:
        $i0 = virtualinvoke sourceAlias.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r0 = new org.apache.commons.beanutils.ConversionException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'=\' expected in alias list item: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sourceAlias);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.apache.commons.beanutils.ConversionException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label3:
        i$ = i$ + 1;

        goto label1;

     label4:
        return;
    }

    public static boolean isSuppressed(java.lang.String, int, int)
    {
        java.lang.String aSourceName, checkAlias, $r3;
        int aLine, aColumn, $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.List entries;
        java.util.Iterator i$;
        com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry entry;
        boolean afterStart, beforeEnd, nameMatches, $z0, $z1, $z2;
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1, $r2;

        aSourceName := @parameter0: java.lang.String;

        aLine := @parameter1: int;

        aColumn := @parameter2: int;

        $r0 = <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.ThreadLocal ENTRIES>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        entries = (java.util.List) $r1;

        checkAlias = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String getAlias(java.lang.String)>(aSourceName);

        if entries == null goto label9;

        if checkAlias == null goto label9;

        i$ = interfaceinvoke entries.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r2 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        entry = (com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry) $r2;

        $i1 = virtualinvoke entry.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry: int getFirstLine()>();

        if $i1 < aLine goto label2;

        $i3 = virtualinvoke entry.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry: int getFirstLine()>();

        if $i3 != aLine goto label3;

        $i5 = virtualinvoke entry.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry: int getFirstColumn()>();

        if $i5 > aColumn goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        afterStart = $z2;

        $i0 = virtualinvoke entry.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry: int getLastLine()>();

        if $i0 > aLine goto label5;

        $i2 = virtualinvoke entry.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry: int getLastLine()>();

        if $i2 != aLine goto label6;

        $i4 = virtualinvoke entry.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry: int getLastColumn()>();

        if $i4 < aColumn goto label6;

     label5:
        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        beforeEnd = $z1;

        $r3 = virtualinvoke entry.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry: java.lang.String getCheckName()>();

        nameMatches = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(checkAlias);

        if afterStart == 0 goto label8;

        if beforeEnd == 0 goto label8;

        if nameMatches == 0 goto label8;

        return 1;

     label8:
        goto label1;

     label9:
        return 0;
    }

    public int[] getDefaultTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder;

        $r0 = newarray (int)[1];

        $r0[0] = 163;

        return $r0;
    }

    public void beginTree(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aRootAST;
        java.util.LinkedList $r0;
        java.lang.ThreadLocal $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder;

        aRootAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r1 = <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.ThreadLocal ENTRIES>;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r1.<java.lang.ThreadLocal: void set(java.lang.Object)>($r0);

        return;
    }

    public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, lparenAST, nextAST, $r0, $r9, nextType;
        java.lang.String identifier, value, $r1, $r6, $r10;
        java.util.List values, entries;
        int nextType, firstLine, firstColumn, lastLine, lastColumn, $i0, $i1, $i2, $i3, $i4;
        java.util.Iterator i$;
        boolean $z0, $z1, $z2, $z3;
        java.lang.ThreadLocal $r2;
        java.lang.Object $r3, $r4;
        com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry $r5;
        java.lang.Object[] $r7, $r8;

        this := @this: com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: com.puppycrawl.tools.checkstyle.api.DetailAST getNthChild(com.puppycrawl.tools.checkstyle.api.DetailAST,int)>(aAST, 1);

        identifier = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String getIdentifier(com.puppycrawl.tools.checkstyle.api.DetailAST)>($r0);

        $z0 = virtualinvoke identifier.<java.lang.String: boolean startsWith(java.lang.String)>("java.lang.");

        if $z0 == 0 goto label01;

        $r10 = "java.lang.";

        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();

        identifier = virtualinvoke identifier.<java.lang.String: java.lang.String substring(int)>($i4);

     label01:
        $r1 = "SuppressWarnings";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(identifier);

        if $z1 == 0 goto label16;

        values = null;

        lparenAST = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST findFirstToken(int)>(77);

        if lparenAST == null goto label05;

        nextAST = virtualinvoke lparenAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getNextSibling()>();

        if nextAST == null goto label05;

        nextType = virtualinvoke nextAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        lookupswitch(nextType)
        {
            case 29: goto label02;
            case 78: goto label04;
            case 164: goto label03;
            case 166: goto label02;
            default: goto label05;
        };

     label02:
        values = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.util.List getAnnotationValues(com.puppycrawl.tools.checkstyle.api.DetailAST)>(nextAST);

        goto label05;

     label03:
        $r9 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: com.puppycrawl.tools.checkstyle.api.DetailAST getNthChild(com.puppycrawl.tools.checkstyle.api.DetailAST,int)>(nextAST, 2);

        values = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.util.List getAnnotationValues(com.puppycrawl.tools.checkstyle.api.DetailAST)>($r9);

        goto label05;

     label04:
        goto label05;

     label05:
        if values != null goto label06;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: void log(com.puppycrawl.tools.checkstyle.api.DetailAST,java.lang.String,java.lang.Object[])>(aAST, "suppress.warnings.missing.value", $r8);

        return;

     label06:
        nextAST = null;

        nextType = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getParent()>();

        if nextType == null goto label10;

        $i1 = virtualinvoke nextType.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        lookupswitch($i1)
        {
            case 5: goto label07;
            case 162: goto label07;
            default: goto label10;
        };

     label07:
        nextType = virtualinvoke nextType.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getParent()>();

        if nextType == null goto label10;

        $i3 = virtualinvoke nextType.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        lookupswitch($i3)
        {
            case 8: goto label08;
            case 9: goto label08;
            case 10: goto label08;
            case 14: goto label08;
            case 15: goto label08;
            case 16: goto label08;
            case 21: goto label08;
            case 158: goto label08;
            case 161: goto label08;
            default: goto label09;
        };

     label08:
        nextAST = nextType;

        goto label10;

     label09:
        goto label10;

     label10:
        if nextAST != null goto label11;

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: void log(com.puppycrawl.tools.checkstyle.api.DetailAST,java.lang.String,java.lang.Object[])>(aAST, "suppress.warnings.invalid.target", $r7);

     label11:
        firstLine = virtualinvoke nextAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        firstColumn = virtualinvoke nextAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        nextAST = virtualinvoke nextAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getNextSibling()>();

        if nextAST == null goto label12;

        lastLine = virtualinvoke nextAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i2 = virtualinvoke nextAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        lastColumn = $i2 - 1;

        goto label13;

     label12:
        lastLine = 2147483647;

        lastColumn = 2147483647;

     label13:
        $r2 = <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.ThreadLocal ENTRIES>;

        $r3 = virtualinvoke $r2.<java.lang.ThreadLocal: java.lang.Object get()>();

        entries = (java.util.List) $r3;

        if entries == null goto label16;

        i$ = interfaceinvoke values.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r4 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        value = (java.lang.String) $r4;

        $z3 = virtualinvoke value.<java.lang.String: boolean startsWith(java.lang.String)>("checkstyle:");

        if $z3 == 0 goto label15;

        $r6 = "checkstyle:";

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        value = virtualinvoke value.<java.lang.String: java.lang.String substring(int)>($i0);

     label15:
        $r5 = new com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry;

        specialinvoke $r5.<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder$Entry: void <init>(java.lang.String,int,int,int,int)>(value, firstLine, firstColumn, lastLine, lastColumn);

        interfaceinvoke entries.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label14;

     label16:
        return;
    }

    private static com.puppycrawl.tools.checkstyle.api.DetailAST getNthChild(com.puppycrawl.tools.checkstyle.api.DetailAST, int)
    {
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, child;
        int aIndex, i;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        aIndex := @parameter1: int;

        child = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        if child == null goto label2;

        i = 0;

     label1:
        if i >= aIndex goto label2;

        if child == null goto label2;

        child = virtualinvoke child.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getNextSibling()>();

        i = i + 1;

        goto label1;

     label2:
        return child;
    }

    private static java.lang.String getIdentifier(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, $r6, $r10;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r8, $r9, $r12;
        java.lang.String $r4, $r7, $r11, $r13, $r14;
        int $i0, $i1;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        if aAST == null goto label2;

        $i0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i0 != 59 goto label1;

        $r13 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: java.lang.String getText()>();

        return $r13;

     label1:
        $i1 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i1 != 60 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        $r7 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String getIdentifier(com.puppycrawl.tools.checkstyle.api.DetailAST)>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getLastChild()>();

        $r11 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String getIdentifier(com.puppycrawl.tools.checkstyle.api.DetailAST)>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label2:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Identifier AST expected: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aAST);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    private static java.lang.String getStringExpr(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, firstChild;
        java.lang.String quotedText, $r4, $r9, $r10;
        java.lang.IllegalArgumentException $r0, $r5;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        if aAST == null goto label2;

        $i0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i0 != 29 goto label2;

        firstChild = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        $i1 = virtualinvoke firstChild.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i1 != 141 goto label1;

        quotedText = virtualinvoke firstChild.<com.puppycrawl.tools.checkstyle.api.DetailAST: java.lang.String getText()>();

        $i3 = virtualinvoke quotedText.<java.lang.String: int length()>();

        $i2 = $i3 - 1;

        $r10 = virtualinvoke quotedText.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        return $r10;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String literal AST expected: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(firstChild);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label2:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expression AST expected: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aAST);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    private static java.util.List getAnnotationValues(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, childAST;
        java.util.LinkedList valueList;
        int $i0, $i1;
        java.lang.String $r0, $r1, $r7;
        com.google.common.collect.ImmutableList $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $i0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        lookupswitch($i0)
        {
            case 29: goto label1;
            case 166: goto label2;
            default: goto label6;
        };

     label1:
        $r1 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String getStringExpr(com.puppycrawl.tools.checkstyle.api.DetailAST)>(aAST);

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r1);

        return $r2;

     label2:
        valueList = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

        childAST = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

     label3:
        if childAST == null goto label5;

        $i1 = virtualinvoke childAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i1 != 29 goto label4;

        $r0 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String getStringExpr(com.puppycrawl.tools.checkstyle.api.DetailAST)>(childAST);

        interfaceinvoke valueList.<java.util.List: boolean add(java.lang.Object)>($r0);

     label4:
        childAST = virtualinvoke childAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getNextSibling()>();

        goto label3;

     label5:
        return valueList;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expression or annotation array initializer AST expected: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aAST);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.lang.ThreadLocal $r1;

        <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String CHECK_SUFFIX> = "Check";

        <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String JAVA_LANG_PREFIX> = "java.lang.";

        <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.String CHECKSTYLE_PREFIX> = "checkstyle:";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.util.Map CHECK_ALIAS_MAP> = $r0;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder: java.lang.ThreadLocal ENTRIES> = $r1;

        return;
    }
}
