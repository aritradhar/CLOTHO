public class com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler extends com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler
{

    public void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;
        com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck aIndentCheck;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAst;
        com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler aParent;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        aIndentCheck := @parameter0: com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck;

        aAst := @parameter1: com.puppycrawl.tools.checkstyle.api.DetailAST;

        aParent := @parameter2: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler: void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck,java.lang.String,com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)>(aIndentCheck, "block", aAst, aParent);

        return;
    }

    public com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel suggestedChildLevel(com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;
        com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler aChild, $r0, $r1, $r3, $r5;
        boolean $z0, $z1, $z2, $z3;
        com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel $r2, $r4;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        aChild := @parameter0: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler getParent()>();

        $z0 = $r0 instanceof com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler;

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler getParent()>();

        $z3 = $r5 instanceof com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        if $z3 == 0 goto label2;

     label1:
        $r1 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler getParent()>();

        $z1 = $r1 instanceof com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler;

        if $z1 == 0 goto label3;

        $z2 = aChild instanceof com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        if $z2 == 0 goto label3;

     label2:
        $r3 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler getParent()>();

        $r4 = virtualinvoke $r3.<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel suggestedChildLevel(com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)>(aChild);

        return $r4;

     label3:
        $r2 = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel suggestedChildLevel(com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)>(aChild);

        return $r2;
    }

    protected com.puppycrawl.tools.checkstyle.api.DetailAST getNonlistChild()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        return null;
    }

    protected com.puppycrawl.tools.checkstyle.api.DetailAST getListChild()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;
        com.puppycrawl.tools.checkstyle.api.DetailAST $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        return $r0;
    }

    protected com.puppycrawl.tools.checkstyle.api.DetailAST getLCurly()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;
        com.puppycrawl.tools.checkstyle.api.DetailAST $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        return $r0;
    }

    protected com.puppycrawl.tools.checkstyle.api.DetailAST getRCurly()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;
        com.puppycrawl.tools.checkstyle.api.DetailAST $r0, $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r1 = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST findFirstToken(int)>(74);

        return $r1;
    }

    protected com.puppycrawl.tools.checkstyle.api.DetailAST getToplevelAST()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        return null;
    }

    private boolean hasBlockParent()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;
        int parentType;
        com.puppycrawl.tools.checkstyle.api.DetailAST $r0, $r1;
        boolean $z0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r1 = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getParent()>();

        parentType = virtualinvoke $r1.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if parentType == 85 goto label1;

        if parentType == 93 goto label1;

        if parentType == 86 goto label1;

        if parentType == 87 goto label1;

        if parentType == 94 goto label1;

        if parentType == 97 goto label1;

        if parentType == 98 goto label1;

        if parentType == 99 goto label1;

        if parentType == 8 goto label1;

        if parentType == 9 goto label1;

        if parentType != 12 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void checkIndentation()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler this;
        boolean $z0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler;

        $z0 = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler: boolean hasBlockParent()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler: void checkIndentation()>();

        return;
    }
}
