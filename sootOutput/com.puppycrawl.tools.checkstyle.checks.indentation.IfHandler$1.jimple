class com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler$1 extends com.puppycrawl.tools.checkstyle.checks.indentation.LineWrappingHandler
{
    final com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler this$0;

    void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler, com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler$1 this;
        com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler l1;
        com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck x0;
        com.puppycrawl.tools.checkstyle.api.DetailAST x1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler$1;

        l1 := @parameter0: com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler;

        x0 := @parameter1: com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck;

        x1 := @parameter2: com.puppycrawl.tools.checkstyle.api.DetailAST;

        this.<com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler$1: com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler this$0> = l1;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.LineWrappingHandler: void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck,com.puppycrawl.tools.checkstyle.api.DetailAST)>(x0, x1);

        return;
    }

    public com.puppycrawl.tools.checkstyle.api.DetailAST findLastNode(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler$1 this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aFirstNode, $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler$1;

        aFirstNode := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = virtualinvoke aFirstNode.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST findFirstToken(int)>(78);

        return $r0;
    }
}
