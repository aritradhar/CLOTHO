class com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper extends javax.swing.tree.DefaultTreeSelectionModel
{
    private static final long serialVersionUID;
    protected boolean updatingListSelectionModel;
    final com.puppycrawl.tools.checkstyle.gui.JTreeTable this$0;

    public void <init>(com.puppycrawl.tools.checkstyle.gui.JTreeTable)
    {
        com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper this;
        com.puppycrawl.tools.checkstyle.gui.JTreeTable l1;
        javax.swing.ListSelectionModel $r0;
        javax.swing.event.ListSelectionListener $r1;

        this := @this: com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper;

        l1 := @parameter0: com.puppycrawl.tools.checkstyle.gui.JTreeTable;

        this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: com.puppycrawl.tools.checkstyle.gui.JTreeTable this$0> = l1;

        specialinvoke this.<javax.swing.tree.DefaultTreeSelectionModel: void <init>()>();

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.ListSelectionModel getListSelectionModel()>();

        $r1 = specialinvoke this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.event.ListSelectionListener createListSelectionListener()>();

        interfaceinvoke $r0.<javax.swing.ListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r1);

        return;
    }

    javax.swing.ListSelectionModel getListSelectionModel()
    {
        com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper this;
        javax.swing.DefaultListSelectionModel $r0;

        this := @this: com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper;

        $r0 = this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.DefaultListSelectionModel listSelectionModel>;

        return $r0;
    }

    public void resetRowSelection()
    {
        com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper this;
        java.lang.Throwable l1, $r0;
        boolean $z0;

        this := @this: com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper;

        $z0 = this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel>;

        if $z0 != 0 goto label5;

        this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 1;

     label1:
        specialinvoke this.<javax.swing.tree.DefaultTreeSelectionModel: void resetRowSelection()>();

     label2:
        this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 0;

        goto label5;

     label3:
        $r0 := @caughtexception;

        l1 = $r0;

     label4:
        this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 0;

        throw l1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private javax.swing.event.ListSelectionListener createListSelectionListener()
    {
        com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper this;
        com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler $r0;

        this := @this: com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper;

        $r0 = new com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler;

        specialinvoke $r0.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler: void <init>(com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper)>(this);

        return $r0;
    }

    protected void updateSelectedPathsFromSelectedRows()
    {
        com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper this;
        int min, max, counter;
        javax.swing.tree.TreePath selPath;
        java.lang.Throwable l5, $r5;
        boolean $z0, $z1;
        javax.swing.DefaultListSelectionModel $r0, $r1, $r2;
        com.puppycrawl.tools.checkstyle.gui.JTreeTable $r3;
        com.puppycrawl.tools.checkstyle.gui.JTreeTable$TreeTableCellRenderer $r4;

        this := @this: com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper;

        $z0 = this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel>;

        if $z0 != 0 goto label7;

        this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 1;

     label1:
        $r0 = this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.DefaultListSelectionModel listSelectionModel>;

        min = virtualinvoke $r0.<javax.swing.DefaultListSelectionModel: int getMinSelectionIndex()>();

        $r1 = this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.DefaultListSelectionModel listSelectionModel>;

        max = virtualinvoke $r1.<javax.swing.DefaultListSelectionModel: int getMaxSelectionIndex()>();

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: void clearSelection()>();

        if min == -1 goto label4;

        if max == -1 goto label4;

        counter = min;

     label2:
        if counter > max goto label4;

        $r2 = this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: javax.swing.DefaultListSelectionModel listSelectionModel>;

        $z1 = virtualinvoke $r2.<javax.swing.DefaultListSelectionModel: boolean isSelectedIndex(int)>(counter);

        if $z1 == 0 goto label3;

        $r3 = this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: com.puppycrawl.tools.checkstyle.gui.JTreeTable this$0>;

        $r4 = $r3.<com.puppycrawl.tools.checkstyle.gui.JTreeTable: com.puppycrawl.tools.checkstyle.gui.JTreeTable$TreeTableCellRenderer tree>;

        selPath = virtualinvoke $r4.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$TreeTableCellRenderer: javax.swing.tree.TreePath getPathForRow(int)>(counter);

        if selPath == null goto label3;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: void addSelectionPath(javax.swing.tree.TreePath)>(selPath);

     label3:
        counter = counter + 1;

        goto label2;

     label4:
        this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 0;

        goto label7;

     label5:
        $r5 := @caughtexception;

        l5 = $r5;

     label6:
        this.<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: boolean updatingListSelectionModel> = 0;

        throw l5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void <clinit>()
    {
        <com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper: long serialVersionUID> = 2267930983939339510L;

        return;
    }
}
