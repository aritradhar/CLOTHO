public final class com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck extends com.puppycrawl.tools.checkstyle.api.Check
{
    private boolean mAllowMarkerInterfaces;

    public void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.api.Check: void <init>()>();

        this.<com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck: boolean mAllowMarkerInterfaces> = 1;

        return;
    }

    public int[] getDefaultTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck;

        $r0 = newarray (int)[1];

        $r0[0] = 15;

        return $r0;
    }

    public int[] getRequiredTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck: int[] getDefaultTokens()>();

        return $r0;
    }

    public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, objBlock, methodDef, variableDef;
        boolean methodRequired, $z0, $z1;
        int $i0;
        java.lang.Object[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        objBlock = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST findFirstToken(int)>(6);

        methodDef = virtualinvoke objBlock.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST findFirstToken(int)>(9);

        variableDef = virtualinvoke objBlock.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST findFirstToken(int)>(10);

        $z0 = this.<com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck: boolean mAllowMarkerInterfaces>;

        if $z0 == 0 goto label1;

        if variableDef == null goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        methodRequired = $z1;

        if methodDef != null goto label4;

        if methodRequired == 0 goto label4;

        $i0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $r0 = newarray (java.lang.Object)[0];

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck: void log(int,java.lang.String,java.lang.Object[])>($i0, "interface.type", $r0);

     label4:
        return;
    }

    public void setAllowMarkerInterfaces(boolean)
    {
        com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck this;
        boolean aFlag;

        this := @this: com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck;

        aFlag := @parameter0: boolean;

        this.<com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck: boolean mAllowMarkerInterfaces> = aFlag;

        return;
    }
}
