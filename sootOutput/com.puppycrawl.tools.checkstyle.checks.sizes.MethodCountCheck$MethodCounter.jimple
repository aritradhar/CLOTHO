class com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter extends java.lang.Object
{
    private final java.util.EnumMap mCounts;
    private final boolean mInInterface;
    private int mTotal;

    void <init>(boolean)
    {
        com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter this;
        boolean aInInterface;
        java.util.EnumMap $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter;

        aInInterface := @parameter0: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = new java.util.EnumMap;

        specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class "com/puppycrawl/tools/checkstyle/api/Scope");

        this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: java.util.EnumMap mCounts> = $r0;

        this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: boolean mInInterface> = aInInterface;

        return;
    }

    void increment(com.puppycrawl.tools.checkstyle.api.Scope)
    {
        com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter this;
        com.puppycrawl.tools.checkstyle.api.Scope aScope, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.util.EnumMap $r0, $r4;
        java.lang.Integer $r1, $r6;

        this := @this: com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter;

        aScope := @parameter0: com.puppycrawl.tools.checkstyle.api.Scope;

        $i0 = this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: int mTotal>;

        $i1 = $i0 + 1;

        this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: int mTotal> = $i1;

        $z0 = this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: boolean mInInterface>;

        if $z0 == 0 goto label1;

        $r4 = this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: java.util.EnumMap mCounts>;

        $r5 = <com.puppycrawl.tools.checkstyle.api.Scope: com.puppycrawl.tools.checkstyle.api.Scope PUBLIC>;

        $r3 = <com.puppycrawl.tools.checkstyle.api.Scope: com.puppycrawl.tools.checkstyle.api.Scope PUBLIC>;

        $i4 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: int value(com.puppycrawl.tools.checkstyle.api.Scope)>($r3);

        $i5 = 1 + $i4;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r4.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>($r5, $r6);

        goto label2;

     label1:
        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: java.util.EnumMap mCounts>;

        $i2 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: int value(com.puppycrawl.tools.checkstyle.api.Scope)>(aScope);

        $i3 = 1 + $i2;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r0.<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>(aScope, $r1);

     label2:
        return;
    }

    int value(com.puppycrawl.tools.checkstyle.api.Scope)
    {
        com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter this;
        com.puppycrawl.tools.checkstyle.api.Scope aScope;
        java.lang.Integer value;
        java.util.EnumMap $r0;
        java.lang.Object $r1;
        int $i0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter;

        aScope := @parameter0: com.puppycrawl.tools.checkstyle.api.Scope;

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: java.util.EnumMap mCounts>;

        $r1 = virtualinvoke $r0.<java.util.EnumMap: java.lang.Object get(java.lang.Object)>(aScope);

        value = (java.lang.Integer) $r1;

        if null != value goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke value.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;
    }

    int getTotal()
    {
        com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter this;
        int $i0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter;

        $i0 = this.<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter: int mTotal>;

        return $i0;
    }
}
