public class com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck extends com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck
{
    private java.util.regex.Pattern mForbiddenSummaryFragments;

    public void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck this;
        java.util.regex.Pattern $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck: void <init>()>();

        $r0 = staticinvoke <com.puppycrawl.tools.checkstyle.api.Utils: java.util.regex.Pattern createPattern(java.lang.String)>("^$");

        this.<com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck: java.util.regex.Pattern mForbiddenSummaryFragments> = $r0;

        return;
    }

    public void setForbiddenSummaryFragments(java.lang.String)
    {
        com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck this;
        java.lang.String aPattern;
        java.util.regex.Pattern $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck;

        aPattern := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.puppycrawl.tools.checkstyle.api.Utils: java.util.regex.Pattern createPattern(java.lang.String)>(aPattern);

        this.<com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck: java.util.regex.Pattern mForbiddenSummaryFragments> = $r0;

        return;
    }

    public int[] getDefaultJavadocTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck;

        $r0 = newarray (int)[1];

        $r0[0] = 10000;

        return $r0;
    }

    public void visitJavadocToken(com.puppycrawl.tools.checkstyle.api.DetailNode)
    {
        com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailNode aAst;
        java.lang.String firstSentence;
        int endOfSentence, $i0, $i1;
        boolean $z0;
        java.lang.Object[] $r0, $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck;

        aAst := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailNode;

        firstSentence = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck: java.lang.String getFirstSentence(com.puppycrawl.tools.checkstyle.api.DetailNode)>(aAst);

        endOfSentence = virtualinvoke firstSentence.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if endOfSentence != -1 goto label1;

        $i1 = interfaceinvoke aAst.<com.puppycrawl.tools.checkstyle.api.DetailNode: int getLineNumber()>();

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck: void log(int,java.lang.String,java.lang.Object[])>($i1, "summary.first.sentence", $r1);

        goto label2;

     label1:
        firstSentence = virtualinvoke firstSentence.<java.lang.String: java.lang.String substring(int,int)>(0, endOfSentence);

        $z0 = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck: boolean containsForbiddenFragment(java.lang.String)>(firstSentence);

        if $z0 == 0 goto label2;

        $i0 = interfaceinvoke aAst.<com.puppycrawl.tools.checkstyle.api.DetailNode: int getLineNumber()>();

        $r0 = newarray (java.lang.Object)[0];

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck: void log(int,java.lang.String,java.lang.Object[])>($i0, "summary.javaDoc", $r0);

     label2:
        return;
    }

    private java.lang.String getFirstSentence(com.puppycrawl.tools.checkstyle.api.DetailNode)
    {
        com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailNode aAst, child;
        java.lang.StringBuilder result, $r0;
        com.puppycrawl.tools.checkstyle.api.DetailNode[] arr$;
        int len$, i$, $i0;
        java.lang.String $r1, $r2, $r4, $r5;
        boolean $z0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck;

        aAst := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailNode;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        result = $r0;

        arr$ = interfaceinvoke aAst.<com.puppycrawl.tools.checkstyle.api.DetailNode: com.puppycrawl.tools.checkstyle.api.DetailNode[] getChildren()>();

        len$ = lengthof arr$;

        i$ = 0;

     label1:
        if i$ >= len$ goto label3;

        child = arr$[i$];

        $i0 = interfaceinvoke child.<com.puppycrawl.tools.checkstyle.api.DetailNode: int getType()>();

        if $i0 == 10072 goto label2;

        $r4 = interfaceinvoke child.<com.puppycrawl.tools.checkstyle.api.DetailNode: java.lang.String getText()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(". ");

        if $z0 == 0 goto label2;

        $r5 = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck: java.lang.String getCharsTillDot(com.puppycrawl.tools.checkstyle.api.DetailNode)>(child);

        virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label3;

     label2:
        $r2 = interfaceinvoke child.<com.puppycrawl.tools.checkstyle.api.DetailNode: java.lang.String getText()>();

        virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        i$ = i$ + 1;

        goto label1;

     label3:
        $r1 = virtualinvoke result.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private java.lang.String getCharsTillDot(com.puppycrawl.tools.checkstyle.api.DetailNode)
    {
        com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailNode aTextNode, child, $r6;
        java.lang.StringBuilder result, $r0;
        com.puppycrawl.tools.checkstyle.api.DetailNode[] arr$;
        int len$, i$, $i0;
        java.lang.String $r1, $r2, $r4, $r5;
        boolean $z0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck;

        aTextNode := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailNode;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        result = $r0;

        arr$ = interfaceinvoke aTextNode.<com.puppycrawl.tools.checkstyle.api.DetailNode: com.puppycrawl.tools.checkstyle.api.DetailNode[] getChildren()>();

        len$ = lengthof arr$;

        i$ = 0;

     label1:
        if i$ >= len$ goto label3;

        child = arr$[i$];

        $r2 = interfaceinvoke child.<com.puppycrawl.tools.checkstyle.api.DetailNode: java.lang.String getText()>();

        virtualinvoke result.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = ".";

        $r5 = interfaceinvoke child.<com.puppycrawl.tools.checkstyle.api.DetailNode: java.lang.String getText()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r6 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils: com.puppycrawl.tools.checkstyle.api.DetailNode getNextSibling(com.puppycrawl.tools.checkstyle.api.DetailNode)>(child);

        $i0 = interfaceinvoke $r6.<com.puppycrawl.tools.checkstyle.api.DetailNode: int getType()>();

        if $i0 != 4 goto label2;

        goto label3;

     label2:
        i$ = i$ + 1;

        goto label1;

     label3:
        $r1 = virtualinvoke result.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private boolean containsForbiddenFragment(java.lang.String)
    {
        com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck this;
        java.lang.String aFirstSentence, javadocText;
        com.google.common.base.CharMatcher $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck;

        aFirstSentence := @parameter0: java.lang.String;

        javadocText = virtualinvoke aFirstSentence.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n[ ]+(\\*)|^[ ]+(\\*)", " ");

        $r0 = <com.google.common.base.CharMatcher: com.google.common.base.CharMatcher WHITESPACE>;

        javadocText = virtualinvoke $r0.<com.google.common.base.CharMatcher: java.lang.String trimAndCollapseFrom(java.lang.CharSequence,char)>(javadocText, 32);

        $r1 = this.<com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck: java.util.regex.Pattern mForbiddenSummaryFragments>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(javadocText);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }
}
