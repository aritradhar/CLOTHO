class com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context extends java.lang.Object
{
    private final java.util.Set mReferencedClassNames;
    private final java.lang.String mClassName;
    private final int mLineNo;
    private final int mColumnNo;
    final com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0;

    public void <init>(com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck, java.lang.String, int, int)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context this;
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck l1;
        java.lang.String aClassName;
        int aLineNo, aColumnNo;
        java.util.TreeSet $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context;

        l1 := @parameter0: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck;

        aClassName := @parameter1: java.lang.String;

        aLineNo := @parameter2: int;

        aColumnNo := @parameter3: int;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = staticinvoke <com.google.common.collect.Sets: java.util.TreeSet newTreeSet()>();

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.util.Set mReferencedClassNames> = $r0;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.lang.String mClassName> = aClassName;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: int mLineNo> = aLineNo;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: int mColumnNo> = aColumnNo;

        return;
    }

    public void visitLiteralThrows(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aThrows, childAST;
        int $i0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context;

        aThrows := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        childAST = virtualinvoke aThrows.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

     label1:
        if childAST == null goto label3;

        $i0 = virtualinvoke childAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i0 == 75 goto label2;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: void addReferencedClassName(com.puppycrawl.tools.checkstyle.api.DetailAST)>(childAST);

     label2:
        childAST = virtualinvoke childAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getNextSibling()>();

        goto label1;

     label3:
        return;
    }

    public void visitType(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context this, $r2;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        java.lang.String className;
        com.puppycrawl.tools.checkstyle.api.FullIdent $r0;
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.CheckUtils: com.puppycrawl.tools.checkstyle.api.FullIdent createFullType(com.puppycrawl.tools.checkstyle.api.DetailAST)>(aAST);

        className = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.FullIdent: java.lang.String getText()>();

        $r1 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0>;

        $r2 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context access$000(com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck)>($r1);

        specialinvoke $r2.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: void addReferencedClassName(java.lang.String)>(className);

        return;
    }

    public void visitLiteralNew(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context this, $r1;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, $r2;
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0>;

        $r1 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context access$000(com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck)>($r0);

        $r2 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        specialinvoke $r1.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: void addReferencedClassName(com.puppycrawl.tools.checkstyle.api.DetailAST)>($r2);

        return;
    }

    private void addReferencedClassName(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        java.lang.String className;
        com.puppycrawl.tools.checkstyle.api.FullIdent $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = staticinvoke <com.puppycrawl.tools.checkstyle.api.FullIdent: com.puppycrawl.tools.checkstyle.api.FullIdent createFullIdent(com.puppycrawl.tools.checkstyle.api.DetailAST)>(aAST);

        className = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.FullIdent: java.lang.String getText()>();

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: void addReferencedClassName(java.lang.String)>(className);

        return;
    }

    private void addReferencedClassName(java.lang.String)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context this;
        java.lang.String aClassName;
        boolean $z0;
        java.util.Set $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context;

        aClassName := @parameter0: java.lang.String;

        $z0 = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: boolean isSignificant(java.lang.String)>(aClassName);

        if $z0 == 0 goto label1;

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.util.Set mReferencedClassNames>;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(aClassName);

     label1:
        return;
    }

    public void checkCoupling()
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context this;
        java.lang.String $r0, $r5, $r8, $r10, $r16, $r21;
        java.util.Set $r1, $r3, $r11, $r17, $r22;
        java.lang.StringBuilder $r2, $r6, $r7, $r9;
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck $r4, $r12, $r13, $r14, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r15;
        java.lang.Integer $r18, $r20;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context;

        $r1 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.util.Set mReferencedClassNames>;

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.lang.String mClassName>;

        interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>($r0);

        $r3 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.util.Set mReferencedClassNames>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0>;

        $r5 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck: java.lang.String access$100(com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r8 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.lang.String mClassName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>($r10);

        $r11 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.util.Set mReferencedClassNames>;

        $i0 = interfaceinvoke $r11.<java.util.Set: int size()>();

        $r12 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0>;

        $i1 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck: int access$200(com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck)>($r12);

        if $i0 <= $i1 goto label1;

        $r13 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0>;

        $i3 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: int mLineNo>;

        $i2 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: int mColumnNo>;

        $r14 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0>;

        $r16 = virtualinvoke $r14.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck: java.lang.String getLogMessageId()>();

        $r15 = newarray (java.lang.Object)[3];

        $r17 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.util.Set mReferencedClassNames>;

        $i4 = interfaceinvoke $r17.<java.util.Set: int size()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r15[0] = $r18;

        $r19 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0>;

        $i5 = virtualinvoke $r19.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck: int getMax()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r15[1] = $r20;

        $r22 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: java.util.Set mReferencedClassNames>;

        $r21 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>();

        $r15[2] = $r21;

        virtualinvoke $r13.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i3, $i2, $r16, $r15);

     label1:
        return;
    }

    private boolean isSignificant(java.lang.String)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context this;
        java.lang.String aClassName;
        int $i0;
        com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck $r0;
        java.util.Set $r1;
        boolean $z0, $z1, $z2;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context;

        aClassName := @parameter0: java.lang.String;

        $i0 = virtualinvoke aClassName.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context: com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck this$0>;

        $r1 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck: java.util.Set access$300(com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck)>($r0);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(aClassName);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke aClassName.<java.lang.String: boolean startsWith(java.lang.String)>("java.lang.");

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }
}
