public class com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck extends com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck
{

    public void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck this;
        java.lang.String[] $r0;
        java.lang.String $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck: void <init>()>();

        $r0 = newarray (java.lang.String)[1];

        $r1 = staticinvoke <com.puppycrawl.tools.checkstyle.api.TokenTypes: java.lang.String getTokenName(int)>(96);

        $r0[0] = $r1;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck: void setLimitedTokens(java.lang.String[])>($r0);

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck: void setMinimumNumber(int)>(1);

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck: void setMaximumDepth(int)>(2);

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck: void setMinimumMessage(java.lang.String)>("missing.switch.default");

        return;
    }

    public int[] getDefaultTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck;

        $r0 = newarray (int)[1];

        $r0[0] = 91;

        return $r0;
    }

    public int[] getAcceptableTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck: int[] getDefaultTokens()>();

        return $r0;
    }
}
