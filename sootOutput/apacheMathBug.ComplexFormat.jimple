public class apacheMathBug.ComplexFormat extends java.text.Format implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String DEFAULT_IMAGINARY_CHARACTER;
    private java.lang.String imaginaryCharacter;
    private java.text.NumberFormat imaginaryFormat;
    private java.text.NumberFormat realFormat;

    public void <init>()
    {
        apacheMathBug.ComplexFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: apacheMathBug.ComplexFormat;

        $r1 = staticinvoke <apacheMathBug.ComplexFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<apacheMathBug.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat)>("i", $r1);

        return;
    }

    public void <init>(java.text.NumberFormat)
    {
        apacheMathBug.ComplexFormat r0;
        java.text.NumberFormat r1;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.text.NumberFormat;

        specialinvoke r0.<apacheMathBug.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat)>("i", r1);

        return;
    }

    public void <init>(java.text.NumberFormat, java.text.NumberFormat)
    {
        apacheMathBug.ComplexFormat r0;
        java.text.NumberFormat r1, r2;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.text.NumberFormat;

        r2 := @parameter1: java.text.NumberFormat;

        specialinvoke r0.<apacheMathBug.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)>("i", r1, r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1;
        java.text.NumberFormat $r2;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <apacheMathBug.ComplexFormat: java.text.NumberFormat getDefaultNumberFormat()>();

        specialinvoke r0.<apacheMathBug.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String, java.text.NumberFormat)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1;
        java.text.NumberFormat r2, $r4;
        java.lang.Object $r3;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.NumberFormat;

        $r3 = virtualinvoke r2.<java.text.NumberFormat: java.lang.Object clone()>();

        $r4 = (java.text.NumberFormat) $r3;

        specialinvoke r0.<apacheMathBug.ComplexFormat: void <init>(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)>(r1, r2, $r4);

        return;
    }

    public void <init>(java.lang.String, java.text.NumberFormat, java.text.NumberFormat)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1;
        java.text.NumberFormat r2, r3;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.NumberFormat;

        r3 := @parameter2: java.text.NumberFormat;

        specialinvoke r0.<java.text.Format: void <init>()>();

        virtualinvoke r0.<apacheMathBug.ComplexFormat: void setImaginaryCharacter(java.lang.String)>(r1);

        virtualinvoke r0.<apacheMathBug.ComplexFormat: void setImaginaryFormat(java.text.NumberFormat)>(r3);

        virtualinvoke r0.<apacheMathBug.ComplexFormat: void setRealFormat(java.text.NumberFormat)>(r2);

        return;
    }

    public static java.lang.String formatComplex(apacheMathBug.Complex)
    {
        apacheMathBug.Complex r0;
        apacheMathBug.ComplexFormat $r1;
        java.lang.String $r2;

        r0 := @parameter0: apacheMathBug.Complex;

        $r1 = staticinvoke <apacheMathBug.ComplexFormat: apacheMathBug.ComplexFormat getInstance()>();

        $r2 = virtualinvoke $r1.<apacheMathBug.ComplexFormat: java.lang.String format(java.lang.Object)>(r0);

        return $r2;
    }

    public java.lang.StringBuffer format(apacheMathBug.Complex, java.lang.StringBuffer, java.text.FieldPosition)
    {
        apacheMathBug.ComplexFormat r0;
        apacheMathBug.Complex r1;
        java.lang.StringBuffer r2;
        java.text.FieldPosition r3;
        double d0, d1, $d2;
        java.text.NumberFormat $r4, $r7, $r13;
        byte $b0, $b1;
        java.lang.String $r8, $r15;
        boolean $z0;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: apacheMathBug.Complex;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        virtualinvoke r3.<java.text.FieldPosition: void setBeginIndex(int)>(0);

        virtualinvoke r3.<java.text.FieldPosition: void setEndIndex(int)>(0);

        d0 = virtualinvoke r1.<apacheMathBug.Complex: double getReal()>();

        $r4 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat getRealFormat()>();

        specialinvoke r0.<apacheMathBug.ComplexFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>(d0, $r4, r2, r3);

        d1 = virtualinvoke r1.<apacheMathBug.Complex: double getImaginary()>();

        $b0 = d1 cmpg 0.0;

        if $b0 >= 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ");

        $d2 = neg d1;

        $r13 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat getImaginaryFormat()>();

        specialinvoke r0.<apacheMathBug.ComplexFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>($d2, $r13, r2, r3);

        $r15 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.lang.String getImaginaryCharacter()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        goto label3;

     label1:
        $b1 = d1 cmpl 0.0;

        if $b1 > 0 goto label2;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

        $r7 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat getImaginaryFormat()>();

        specialinvoke r0.<apacheMathBug.ComplexFormat: java.lang.StringBuffer formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)>(d1, $r7, r2, r3);

        $r8 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.lang.String getImaginaryCharacter()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label3:
        return r2;
    }

    public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.Object r1;
        java.lang.StringBuffer r2, r8;
        java.text.FieldPosition r3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4;
        apacheMathBug.Complex $r5, $r7;
        java.lang.Number $r6;
        double $d0;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.StringBuffer;

        r3 := @parameter2: java.text.FieldPosition;

        $z0 = r1 instanceof apacheMathBug.Complex;

        if $z0 == 0 goto label1;

        $r7 = (apacheMathBug.Complex) r1;

        r8 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.lang.StringBuffer format(apacheMathBug.Complex,java.lang.StringBuffer,java.text.FieldPosition)>($r7, r2, r3);

        goto label3;

     label1:
        $z1 = r1 instanceof java.lang.Number;

        if $z1 == 0 goto label2;

        $r5 = new apacheMathBug.Complex;

        $r6 = (java.lang.Number) r1;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        specialinvoke $r5.<apacheMathBug.Complex: void <init>(double,double)>($d0, 0.0);

        r8 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.lang.StringBuffer format(apacheMathBug.Complex,java.lang.StringBuffer,java.text.FieldPosition)>($r5, r2, r3);

        goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot format given Object as a Date");

        throw $r4;

     label3:
        return r8;
    }

    private java.lang.StringBuffer formatDouble(double, java.text.NumberFormat, java.lang.StringBuffer, java.text.FieldPosition)
    {
        apacheMathBug.ComplexFormat r0;
        double d0;
        java.text.NumberFormat r1;
        java.lang.StringBuffer r2;
        java.text.FieldPosition r3;
        boolean $z0, $z1;

        r0 := @this: apacheMathBug.ComplexFormat;

        d0 := @parameter0: double;

        r1 := @parameter1: java.text.NumberFormat;

        r2 := @parameter2: java.lang.StringBuffer;

        r3 := @parameter3: java.text.FieldPosition;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d0);

        if $z1 == 0 goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d0);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label3;

     label2:
        virtualinvoke r1.<java.text.NumberFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>(d0, r2, r3);

     label3:
        return r2;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>();

        return $r0;
    }

    private static java.text.NumberFormat getDefaultNumberFormat()
    {
        java.util.Locale $r0;
        java.text.NumberFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <apacheMathBug.ComplexFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>($r0);

        return $r1;
    }

    private static java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)
    {
        java.util.Locale r0;
        java.text.NumberFormat r1;

        r0 := @parameter0: java.util.Locale;

        r1 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>(r0);

        virtualinvoke r1.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(2);

        return r1;
    }

    public java.lang.String getImaginaryCharacter()
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String $r1;

        r0 := @this: apacheMathBug.ComplexFormat;

        $r1 = r0.<apacheMathBug.ComplexFormat: java.lang.String imaginaryCharacter>;

        return $r1;
    }

    public java.text.NumberFormat getImaginaryFormat()
    {
        apacheMathBug.ComplexFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: apacheMathBug.ComplexFormat;

        $r1 = r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat imaginaryFormat>;

        return $r1;
    }

    public static apacheMathBug.ComplexFormat getInstance()
    {
        java.util.Locale $r0;
        apacheMathBug.ComplexFormat $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <apacheMathBug.ComplexFormat: apacheMathBug.ComplexFormat getInstance(java.util.Locale)>($r0);

        return $r1;
    }

    public static apacheMathBug.ComplexFormat getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        java.text.NumberFormat r1;
        apacheMathBug.ComplexFormat $r2;

        r0 := @parameter0: java.util.Locale;

        r1 = staticinvoke <apacheMathBug.ComplexFormat: java.text.NumberFormat getDefaultNumberFormat(java.util.Locale)>(r0);

        $r2 = new apacheMathBug.ComplexFormat;

        specialinvoke $r2.<apacheMathBug.ComplexFormat: void <init>(java.text.NumberFormat)>(r1);

        return $r2;
    }

    public java.text.NumberFormat getRealFormat()
    {
        apacheMathBug.ComplexFormat r0;
        java.text.NumberFormat $r1;

        r0 := @this: apacheMathBug.ComplexFormat;

        $r1 = r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat realFormat>;

        return $r1;
    }

    public apacheMathBug.Complex parse(java.lang.String) throws java.text.ParseException
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1, $r9;
        java.text.ParsePosition r2, $r4;
        apacheMathBug.Complex r3;
        int $i0, $i1;
        java.text.ParseException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.ParsePosition;

        specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0);

        r2 = $r4;

        r3 = virtualinvoke r0.<apacheMathBug.ComplexFormat: apacheMathBug.Complex parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        if $i0 != 0 goto label1;

        $r5 = new java.text.ParseException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unparseable complex number: \"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r2.<java.text.ParsePosition: int getErrorIndex()>();

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>($r9, $i1);

        throw $r5;

     label1:
        return r3;
    }

    public apacheMathBug.Complex parse(java.lang.String, java.text.ParsePosition)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1, $r7, $r8, $r9;
        java.text.ParsePosition r2;
        int i0, i1, i3, i4, $i5, i7;
        java.lang.Number r3, r4;
        char c2;
        java.text.NumberFormat $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4;
        apacheMathBug.Complex $r10, $r11;
        byte b6;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        specialinvoke r0.<apacheMathBug.ComplexFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r5 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat getRealFormat()>();

        r3 = specialinvoke r0.<apacheMathBug.ComplexFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>(r1, $r5, r2);

        if r3 != null goto label1;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label1:
        i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        c2 = specialinvoke r0.<apacheMathBug.ComplexFormat: char parseNextCharacter(java.lang.String,java.text.ParsePosition)>(r1, r2);

        lookupswitch(c2)
        {
            case 0: goto label2;
            case 43: goto label4;
            case 45: goto label3;
            default: goto label5;
        };

     label2:
        $r11 = new apacheMathBug.Complex;

        $d4 = virtualinvoke r3.<java.lang.Number: double doubleValue()>();

        specialinvoke $r11.<apacheMathBug.Complex: void <init>(double,double)>($d4, 0.0);

        return $r11;

     label3:
        b6 = -1;

        goto label6;

     label4:
        b6 = 1;

        goto label6;

     label5:
        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        virtualinvoke r2.<java.text.ParsePosition: void setErrorIndex(int)>(i1);

        return null;

     label6:
        specialinvoke r0.<apacheMathBug.ComplexFormat: void parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $r6 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat getRealFormat()>();

        r4 = specialinvoke r0.<apacheMathBug.ComplexFormat: java.lang.Number parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)>(r1, $r6, r2);

        if r4 != null goto label7;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        return null;

     label7:
        $r7 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.lang.String getImaginaryCharacter()>();

        i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        i7 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        i4 = i7 + i3;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i7, i4);

        $r9 = virtualinvoke r0.<apacheMathBug.ComplexFormat: java.lang.String getImaginaryCharacter()>();

        $i5 = virtualinvoke $r8.<java.lang.String: int compareTo(java.lang.String)>($r9);

        if $i5 == 0 goto label8;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        virtualinvoke r2.<java.text.ParsePosition: void setErrorIndex(int)>(i7);

        return null;

     label8:
        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i4);

        $r10 = new apacheMathBug.Complex;

        $d0 = virtualinvoke r3.<java.lang.Number: double doubleValue()>();

        $d2 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();

        $d1 = (double) b6;

        $d3 = $d2 * $d1;

        specialinvoke $r10.<apacheMathBug.Complex: void <init>(double,double)>($d0, $d3);

        return $r10;
    }

    private void parseAndIgnoreWhitespace(java.lang.String, java.text.ParsePosition)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        int $i1, $i2;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        specialinvoke r0.<apacheMathBug.ComplexFormat: char parseNextCharacter(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        $i2 = $i1 - 1;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i2);

        return;
    }

    private char parseNextCharacter(java.lang.String, java.text.ParsePosition)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        int i0, i1, $i4;
        char c2, c3;
        boolean $z0;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        c2 = 0;

        if i0 >= i1 goto label3;

     label1:
        $i4 = i0;

        i0 = i0 + 1;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c3);

        if $z0 == 0 goto label2;

        if i0 < i1 goto label1;

     label2:
        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i0);

        if i0 >= i1 goto label3;

        c2 = c3;

     label3:
        return c2;
    }

    private java.lang.Number parseNumber(java.lang.String, double, java.text.ParsePosition)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1, $r9, $r10;
        double d0;
        java.text.ParsePosition r2;
        java.lang.Double r3, $r11;
        java.lang.StringBuffer r4, $r5;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r2 := @parameter2: java.text.ParsePosition;

        r3 = null;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r4 = $r5;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d0);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        i0 = virtualinvoke r4.<java.lang.StringBuffer: int length()>();

        i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        i2 = i1 + i0;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i3 goto label1;

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);

        $r10 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $i4 = virtualinvoke $r9.<java.lang.String: int compareTo(java.lang.String)>($r10);

        if $i4 != 0 goto label1;

        $r11 = new java.lang.Double;

        specialinvoke $r11.<java.lang.Double: void <init>(double)>(d0);

        r3 = $r11;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>(i2);

     label1:
        return r3;
    }

    private java.lang.Number parseNumber(java.lang.String, java.text.NumberFormat, java.text.ParsePosition)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1;
        java.text.NumberFormat r2;
        java.text.ParsePosition r3;
        int i0, i1, i2, $i3;
        java.lang.Number r4;
        double[] r5, $r6;
        double $d0;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.NumberFormat;

        r3 := @parameter2: java.text.ParsePosition;

        i0 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();

        r4 = virtualinvoke r2.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, r3);

        i1 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();

        if i0 != i1 goto label4;

        $r6 = newarray (double)[3];

        $r6[0] = #NaN;

        $r6[1] = #Infinity;

        $r6[2] = #-Infinity;

        r5 = $r6;

        i2 = 0;

        goto label3;

     label1:
        $d0 = r5[i2];

        r4 = specialinvoke r0.<apacheMathBug.ComplexFormat: java.lang.Number parseNumber(java.lang.String,double,java.text.ParsePosition)>(r1, $d0, r3);

        if r4 == null goto label2;

        goto label4;

     label2:
        i2 = i2 + 1;

     label3:
        $i3 = lengthof r5;

        if i2 < $i3 goto label1;

     label4:
        return r4;
    }

    public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1;
        java.text.ParsePosition r2;
        apacheMathBug.Complex $r3;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        $r3 = virtualinvoke r0.<apacheMathBug.ComplexFormat: apacheMathBug.Complex parse(java.lang.String,java.text.ParsePosition)>(r1, r2);

        return $r3;
    }

    public void setImaginaryCharacter(java.lang.String)
    {
        apacheMathBug.ComplexFormat r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        int $i0;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("imaginaryCharacter must be a non-empty string.");

        throw $r2;

     label2:
        r0.<apacheMathBug.ComplexFormat: java.lang.String imaginaryCharacter> = r1;

        return;
    }

    public void setImaginaryFormat(java.text.NumberFormat)
    {
        apacheMathBug.ComplexFormat r0;
        java.text.NumberFormat r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.text.NumberFormat;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("imaginaryFormat can not be null.");

        throw $r2;

     label1:
        r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat imaginaryFormat> = r1;

        return;
    }

    public void setRealFormat(java.text.NumberFormat)
    {
        apacheMathBug.ComplexFormat r0;
        java.text.NumberFormat r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: apacheMathBug.ComplexFormat;

        r1 := @parameter0: java.text.NumberFormat;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("realFormat can not be null.");

        throw $r2;

     label1:
        r0.<apacheMathBug.ComplexFormat: java.text.NumberFormat realFormat> = r1;

        return;
    }

    public static void <clinit>()
    {
        <apacheMathBug.ComplexFormat: java.lang.String DEFAULT_IMAGINARY_CHARACTER> = "i";

        <apacheMathBug.ComplexFormat: long serialVersionUID> = -6337346779577272306L;

        return;
    }
}
