public class com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck extends com.puppycrawl.tools.checkstyle.api.Check
{

    public void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.api.Check: void <init>()>();

        return;
    }

    public int[] getDefaultTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck;

        $r0 = newarray (int)[2];

        $r0[0] = 118;

        $r0[1] = 117;

        return $r0;
    }

    public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, firstChild;
        antlr.collections.AST secondChild;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r0;
        java.lang.String $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        firstChild = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        secondChild = interfaceinvoke firstChild.<antlr.collections.AST: antlr.collections.AST getNextSibling()>();

        $i0 = interfaceinvoke firstChild.<antlr.collections.AST: int getType()>();

        if $i0 == 141 goto label1;

        $i3 = interfaceinvoke secondChild.<antlr.collections.AST: int getType()>();

        if $i3 != 141 goto label2;

     label1:
        $i1 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i2 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        $r0 = newarray (java.lang.Object)[1];

        $r1 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: java.lang.String getText()>();

        $r0[0] = $r1;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i1, $i2, "string.literal.equality", $r0);

     label2:
        return;
    }
}
