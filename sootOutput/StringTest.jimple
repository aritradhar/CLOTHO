public class StringTest extends java.lang.Object
{

    public void <init>()
    {
        StringTest r0;

        r0 := @this: StringTest;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    void foo()
    {
        StringTest r0, $r1;
        java.lang.IllegalArgumentException r2, $r3;

        r0 := @this: StringTest;

     label0:
        $r1 = new StringTest;
        specialinvoke $r1.<StringTest: void <init>()>();
        virtualinvoke $r1.<StringTest: void bar()>();

     label1:
        goto label3;

     label2:
        $r3 := @caughtexception;
        r2 = $r3;
        virtualinvoke r2.<java.lang.IllegalArgumentException: void printStackTrace()>();

     label3:
        return;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
    }

    void bar()
    {
        StringTest r0, $r1;

        r0 := @this: StringTest;
        $r1 = new StringTest;
        specialinvoke $r1.<StringTest: void <init>()>();
        virtualinvoke $r1.<StringTest: void bar1()>();
        return;
    }

    void bar1()
    {
        StringTest r0;

        r0 := @this: StringTest;
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        java.lang.String r1, r2;
        byte b0;
        boolean z0, z1, z2, z3, $z4, z5;
        java.lang.CharSequence r3;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        java.io.PrintStream $r4, $r8, $r9;
        char[] r7;

        r0 := @parameter0: java.lang.String[];
        r1 = "aritra:dhar";
        b0 = 6;
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = b0 + 33;
        if $i1 <= $i2 goto label0;

        z0 = 0;

     label0:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i3 != 1 goto label1;

        z1 = 1;

     label1:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i4 <= 2 goto label2;

        z2 = 1;

     label2:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i5 >= 39 goto label3;

        z3 = 1;

     label3:
        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(">");
        if $z4 == 0 goto label4;

        z5 = 0;

     label4:
        $r4 = <java.lang.System: java.io.PrintStream out>;
        $i6 = virtualinvoke r1.<java.lang.String: int codePointAt(int)>(200);
        virtualinvoke $r4.<java.io.PrintStream: void println(int)>($i6);
        virtualinvoke r1.<java.lang.String: char charAt(int)>(20);
        virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(20);
        virtualinvoke r1.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(1, 2);
        r7 = newarray (char)[10];
        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char[],int,int)>(r7, 1, 2);
        $r8 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>(r2);
        r3 = virtualinvoke r1.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(1, -2);
        $r9 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.Object)>(r3);
        return;
    }
}
