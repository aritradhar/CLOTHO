public class StringTest extends java.lang.Object
{

    public void <init>()
    {
        StringTest this;

        this := @this: StringTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    void foo()
    {
        StringTest this, $r0;
        java.lang.IllegalArgumentException ex, $r1;

        this := @this: StringTest;

     label1:
        $r0 = new StringTest;

        specialinvoke $r0.<StringTest: void <init>()>();

        virtualinvoke $r0.<StringTest: void bar()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        ex = $r1;

        virtualinvoke ex.<java.lang.IllegalArgumentException: void printStackTrace()>();

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    void bar()
    {
        StringTest this, $r0;

        this := @this: StringTest;

        $r0 = new StringTest;

        specialinvoke $r0.<StringTest: void <init>()>();

        virtualinvoke $r0.<StringTest: void bar1()>();

        return;
    }

    void bar1()
    {
        StringTest this;

        this := @this: StringTest;

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] args;
        java.lang.String s, st1, st, st5;
        java.io.BufferedReader $r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream $r2;
        java.io.PrintStream $r3, $r4, $r5, $r6, $r7;
        java.lang.Exception $r8;

        args := @parameter0: java.lang.String[];

        $r0 = new java.io.BufferedReader;

        $r1 = new java.io.InputStreamReader;

        $r2 = <java.lang.System: java.io.InputStream in>;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        s = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

        st1 = "aritra:dhar";

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(s);

        st = null;

     label1:
        st = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 61);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        st5 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 4);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(st5);

        st1 = virtualinvoke st1.<java.lang.String: java.lang.String substring(int,int)>(1, 2);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(st1);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(st);

        st = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 2);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(st);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
