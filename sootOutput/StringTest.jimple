public class StringTest extends java.lang.Object
{

    public void <init>()
    {
        StringTest this;

        this := @this: StringTest;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    void foo()
    {
        StringTest this, $r0;
        java.lang.IllegalArgumentException ex, $r1;

        this := @this: StringTest;

     label0:
        $r0 = new StringTest;
        specialinvoke $r0.<StringTest: void <init>()>();
        virtualinvoke $r0.<StringTest: void bar()>();

     label1:
        goto label3;

     label2:
        $r1 := @caughtexception;
        ex = $r1;
        virtualinvoke ex.<java.lang.IllegalArgumentException: void printStackTrace()>();

     label3:
        return;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
    }

    void bar()
    {
        StringTest this, $r0;

        this := @this: StringTest;
        $r0 = new StringTest;
        specialinvoke $r0.<StringTest: void <init>()>();
        virtualinvoke $r0.<StringTest: void bar1()>();
        return;
    }

    void bar1()
    {
        StringTest this;

        this := @this: StringTest;
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] args;
        java.lang.String s, st1, st, st3, $r0;
        byte k, l5;
        boolean l5, l6, $z0;
        int $i0, $i1;
        java.io.PrintStream $r1;

        args := @parameter0: java.lang.String[];
        s = "aritra:dhar";
        st1 = "aritra:dhar";
        st = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 2);
        k = 6;
        $i0 = virtualinvoke st.<java.lang.String: int length()>();
        $i1 = k + 99;
        if $i0 <= $i1 goto label0;

        l5 = 0;

     label0:
        $i0 = virtualinvoke st.<java.lang.String: int length()>();
        if $i0 != 1 goto label1;

        l5 = 1;

     label1:
        $i0 = virtualinvoke st.<java.lang.String: int length()>();
        if $i0 <= 2 goto label2;

        l5 = 1;

     label2:
        $i0 = virtualinvoke st.<java.lang.String: int length()>();
        if $i0 >= 39 goto label3;

        l5 = 1;
        goto label4;

     label3:
        l5 = 29;

     label4:
        $z0 = virtualinvoke st.<java.lang.String: boolean startsWith(java.lang.String)>(">");
        if $z0 == 0 goto label5;

        l5 = 0;

     label5:
        $z0 = virtualinvoke st.<java.lang.String: boolean startsWith(java.lang.String)>(">:");
        if $z0 == 0 goto label6;

        l5 = 0;

     label6:
        $z0 = virtualinvoke st.<java.lang.String: boolean contains(java.lang.CharSequence)>("aav");
        if $z0 == 0 goto label7;

        l5 = 0;

     label7:
        $z0 = virtualinvoke st1.<java.lang.String: boolean contains(java.lang.CharSequence)>("aavst1");
        if $z0 == 0 goto label8;

        l5 = 0;

     label8:
        $r0 = new java.lang.String;
        specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>("AAWWW");
        st3 = $r0;
        $z0 = virtualinvoke st.<java.lang.String: boolean equals(java.lang.Object)>(st3);
        if $z0 == 0 goto label9;

        l6 = 0;

     label9:
        $r1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(st);
        st = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 200);
        $r1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(st);
        return;
    }
}
