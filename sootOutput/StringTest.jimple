public class StringTest extends java.lang.Object
{

    void foo()
    {
        StringTest this, temp$0;
        java.lang.IllegalArgumentException ex;

        this := @this: StringTest;

     label0:
        nop;
        temp$0 = new StringTest;
        specialinvoke temp$0.<StringTest: void <init>()>();
        virtualinvoke temp$0.<StringTest: void bar()>();
        goto label2;

     label1:
        nop;
        ex := @caughtexception;
        virtualinvoke ex.<java.lang.IllegalArgumentException: void printStackTrace()>();
        nop;
        goto label2;

     label2:
        nop;
        return;

        catch java.lang.IllegalArgumentException from label0 to label1 with label1;
    }

    void bar()
    {
        StringTest this, temp$0;

        this := @this: StringTest;
        temp$0 = new StringTest;
        specialinvoke temp$0.<StringTest: void <init>()>();
        virtualinvoke temp$0.<StringTest: void bar1()>();
        return;
    }

    void bar1()
    {
        StringTest this;

        this := @this: StringTest;
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] args;
        char[] ca, temp$0;
        java.lang.String s1, temp$1, s, temp$6, st1, st, temp$9, st5, temp$10, st3, temp$32, temp$35, temp$38;
        java.io.PrintStream temp$2, temp$8, temp$11, temp$15, temp$16, temp$18, temp$20, temp$22, temp$23, temp$25, temp$27, temp$29, temp$31, temp$34, temp$36, temp$37, temp$39;
        java.io.BufferedReader temp$3;
        java.io.InputStreamReader temp$4;
        java.io.InputStream temp$5;
        int a, b, c, d, temp$7, k, temp$12, temp$13, temp$14, temp$17, temp$19, temp$21;
        boolean temp$24, temp$26, temp$28, temp$30, temp$33;

        args := @parameter0: java.lang.String[];
        temp$0 = newarray (char)[4];
        temp$0[0] = 97;
        temp$0[1] = 98;
        temp$0[2] = 99;
        temp$0[3] = 100;
        ca = temp$0;
        temp$1 = new java.lang.String;
        specialinvoke temp$1.<java.lang.String: void <init>(char[],int,int)>(ca, 1, 1);
        s1 = temp$1;
        temp$2 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$2.<java.io.PrintStream: void println(java.lang.String)>(s1);
        temp$3 = new java.io.BufferedReader;
        temp$4 = new java.io.InputStreamReader;
        temp$5 = <java.lang.System: java.io.InputStream in>;
        specialinvoke temp$4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(temp$5);
        specialinvoke temp$3.<java.io.BufferedReader: void <init>(java.io.Reader)>(temp$4);
        temp$6 = virtualinvoke temp$3.<java.io.BufferedReader: java.lang.String readLine()>();
        s = temp$6;
        st1 = "aritra:dhar";
        a = 10;
        b = 10;
        c = 0;
        temp$7 = a / c;
        d = temp$7;
        temp$8 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$8.<java.io.PrintStream: void println(int)>(d);
        temp$9 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 61);
        st = temp$9;
        temp$10 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 4);
        st5 = temp$10;
        temp$11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$11.<java.io.PrintStream: void println(java.lang.String)>(st5);
        k = 6;
        temp$12 = virtualinvoke st.<java.lang.String: int length()>();
        temp$13 = k;
        temp$14 = temp$13 + 1;
        if temp$12 > temp$14 goto label0;

        goto label1;

     label0:
        nop;
        temp$15 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$15.<java.io.PrintStream: void println(java.lang.String)>("Hit1");

     label1:
        nop;
        temp$16 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$16.<java.io.PrintStream: void println(java.lang.String)>(st);
        temp$17 = virtualinvoke st.<java.lang.String: int length()>();
        if temp$17 == 1 goto label2;

        goto label3;

     label2:
        nop;
        temp$18 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$18.<java.io.PrintStream: void println(java.lang.String)>("Hit2");

     label3:
        nop;
        temp$19 = virtualinvoke st.<java.lang.String: int length()>();
        if temp$19 > 2 goto label4;

        goto label5;

     label4:
        nop;
        temp$20 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$20.<java.io.PrintStream: void println(java.lang.String)>("Hit3");

     label5:
        nop;
        temp$21 = virtualinvoke st.<java.lang.String: int length()>();
        if temp$21 < 39 goto label6;

        goto label7;

     label6:
        nop;
        temp$22 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$22.<java.io.PrintStream: void println(java.lang.String)>("Hit4");
        goto label8;

     label7:
        nop;
        temp$23 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$23.<java.io.PrintStream: void println(java.lang.String)>("Hit5");

     label8:
        nop;
        temp$24 = virtualinvoke st.<java.lang.String: boolean startsWith(java.lang.String)>(">");
        if temp$24 == 0 goto label10;

        goto label9;

     label9:
        nop;
        temp$25 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$25.<java.io.PrintStream: void println(java.lang.String)>("Hit6");

     label10:
        nop;
        temp$26 = virtualinvoke st.<java.lang.String: boolean startsWith(java.lang.String)>(">:");
        if temp$26 == 0 goto label12;

        goto label11;

     label11:
        nop;
        temp$27 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$27.<java.io.PrintStream: void println(java.lang.String)>("Hit7");

     label12:
        nop;
        temp$28 = virtualinvoke st.<java.lang.String: boolean contains(java.lang.CharSequence)>("aav");
        if temp$28 == 0 goto label14;

        goto label13;

     label13:
        nop;
        temp$29 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$29.<java.io.PrintStream: void println(java.lang.String)>("Hit8");

     label14:
        nop;
        temp$30 = virtualinvoke st1.<java.lang.String: boolean contains(java.lang.CharSequence)>("aavst1");
        if temp$30 == 0 goto label16;

        goto label15;

     label15:
        nop;
        temp$31 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$31.<java.io.PrintStream: void println(java.lang.String)>("Hit9");

     label16:
        nop;
        temp$32 = new java.lang.String;
        specialinvoke temp$32.<java.lang.String: void <init>(java.lang.String)>("AAWWW");
        st3 = temp$32;
        temp$33 = virtualinvoke st.<java.lang.String: boolean equals(java.lang.Object)>(st3);
        if temp$33 == 0 goto label18;

        goto label17;

     label17:
        nop;
        temp$34 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$34.<java.io.PrintStream: void println(java.lang.String)>("Hit10");

     label18:
        nop;
        temp$35 = virtualinvoke st1.<java.lang.String: java.lang.String substring(int,int)>(1, 2);
        st1 = temp$35;
        temp$36 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$36.<java.io.PrintStream: void println(java.lang.String)>(st1);
        temp$37 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$37.<java.io.PrintStream: void println(java.lang.String)>(st);
        temp$38 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, 2);
        st = temp$38;
        temp$39 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$39.<java.io.PrintStream: void println(java.lang.String)>(st);
        return;
    }

    public void <init>()
    {
        StringTest this;

        this := @this: StringTest;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }
}
