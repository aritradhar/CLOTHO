public final enum class com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle extends java.lang.Enum
{
    public static final enum com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle EXPANDED;
    public static final enum com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle COMPACT;
    public static final enum com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle COMPACT_NO_ARRAY;
    public static final enum com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle IGNORE;
    private static final com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle[] $VALUES;

    public static com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle[] values()
    {
        com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle[]) $r1;

        return $r2;
    }

    public static com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle valueOf(java.lang.String)
    {
        java.lang.String name;
        java.lang.Enum $r0;
        com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle $r1;

        name := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck$ElementStyle", name);

        $r1 = (com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle) $r0;

        return $r1;
    }

    private void <init>(java.lang.String, int)
    {
        com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle this;
        java.lang.String l1;
        int l2;

        this := @this: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    static void <clinit>()
    {
        com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle[] $r4;

        $r0 = new com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle;

        specialinvoke $r0.<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: void <init>(java.lang.String,int)>("EXPANDED", 0);

        <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle EXPANDED> = $r0;

        $r1 = new com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle;

        specialinvoke $r1.<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: void <init>(java.lang.String,int)>("COMPACT", 1);

        <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle COMPACT> = $r1;

        $r2 = new com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle;

        specialinvoke $r2.<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: void <init>(java.lang.String,int)>("COMPACT_NO_ARRAY", 2);

        <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle COMPACT_NO_ARRAY> = $r2;

        $r3 = new com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle;

        specialinvoke $r3.<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: void <init>(java.lang.String,int)>("IGNORE", 3);

        <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle IGNORE> = $r3;

        $r4 = newarray (com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle)[4];

        $r5 = <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle EXPANDED>;

        $r4[0] = $r5;

        $r6 = <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle COMPACT>;

        $r4[1] = $r6;

        $r7 = <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle COMPACT_NO_ARRAY>;

        $r4[2] = $r7;

        $r8 = <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle IGNORE>;

        $r4[3] = $r8;

        <com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle: com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck$ElementStyle[] $VALUES> = $r4;

        return;
    }
}
