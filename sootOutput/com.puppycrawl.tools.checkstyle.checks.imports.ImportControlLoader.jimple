final class com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader extends com.puppycrawl.tools.checkstyle.api.AbstractLoader
{
    private static final java.lang.String DTD_PUBLIC_ID_1_0;
    private static final java.lang.String DTD_PUBLIC_ID_1_1;
    private static final java.lang.String DTD_RESOURCE_NAME_1_0;
    private static final java.lang.String DTD_RESOURCE_NAME_1_1;
    private final com.puppycrawl.tools.checkstyle.api.FastStack mStack;
    private static final java.util.Map DTD_RESOURCE_BY_ID;
    static final boolean $assertionsDisabled;

    private void <init>() throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException
    {
        com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader this;
        java.util.Map $r0;
        com.puppycrawl.tools.checkstyle.api.FastStack $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader;

        $r0 = <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.util.Map DTD_RESOURCE_BY_ID>;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: void <init>(java.util.Map)>($r0);

        $r1 = staticinvoke <com.puppycrawl.tools.checkstyle.api.FastStack: com.puppycrawl.tools.checkstyle.api.FastStack newInstance()>();

        this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack> = $r1;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader this;
        java.lang.String aNamespaceURI, aLocalName, aQName, pkg, $r0, $r1, $r2, $r3, $r4, $r5, $r8, $r12, exactMatch;
        org.xml.sax.Attributes aAtts;
        boolean isLocalOnly, regex, exactMatch, $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, pkg;
        com.puppycrawl.tools.checkstyle.checks.imports.Guard g, $r7, $r10;
        com.puppycrawl.tools.checkstyle.api.FastStack $r6, $r13, $r17, $r18, $r20, $r21;
        java.lang.Object $r9, $r15;
        java.lang.AssertionError $r11, $r19;
        com.puppycrawl.tools.checkstyle.checks.imports.PkgControl $r14, $r16, $r22, exactMatch;

        this := @this: com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader;

        aNamespaceURI := @parameter0: java.lang.String;

        aLocalName := @parameter1: java.lang.String;

        aQName := @parameter2: java.lang.String;

        aAtts := @parameter3: org.xml.sax.Attributes;

        $r0 = "import-control";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(aQName);

        if $z0 == 0 goto label01;

        pkg = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.lang.String safeGet(org.xml.sax.Attributes,java.lang.String)>(aAtts, "pkg");

        $r21 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $r22 = new com.puppycrawl.tools.checkstyle.checks.imports.PkgControl;

        specialinvoke $r22.<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl: void <init>(java.lang.String)>(pkg);

        virtualinvoke $r21.<com.puppycrawl.tools.checkstyle.api.FastStack: void push(java.lang.Object)>($r22);

        goto label14;

     label01:
        $r1 = "subpackage";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(aQName);

        if $z1 == 0 goto label03;

        $z9 = <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: boolean $assertionsDisabled>;

        if $z9 != 0 goto label02;

        $r20 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $z10 = virtualinvoke $r20.<com.puppycrawl.tools.checkstyle.api.FastStack: boolean isEmpty()>();

        if $z10 == 0 goto label02;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label02:
        pkg = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.lang.String safeGet(org.xml.sax.Attributes,java.lang.String)>(aAtts, "name");

        $r18 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $r14 = new com.puppycrawl.tools.checkstyle.checks.imports.PkgControl;

        $r17 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $r15 = virtualinvoke $r17.<com.puppycrawl.tools.checkstyle.api.FastStack: java.lang.Object peek()>();

        $r16 = (com.puppycrawl.tools.checkstyle.checks.imports.PkgControl) $r15;

        specialinvoke $r14.<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl: void <init>(com.puppycrawl.tools.checkstyle.checks.imports.PkgControl,java.lang.String)>($r16, pkg);

        virtualinvoke $r18.<com.puppycrawl.tools.checkstyle.api.FastStack: void push(java.lang.Object)>($r14);

        goto label14;

     label03:
        $r2 = "allow";

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(aQName);

        if $z3 != 0 goto label04;

        $r12 = "disallow";

        $z8 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(aQName);

        if $z8 == 0 goto label14;

     label04:
        $z2 = <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: boolean $assertionsDisabled>;

        if $z2 != 0 goto label05;

        $r13 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $z7 = virtualinvoke $r13.<com.puppycrawl.tools.checkstyle.api.FastStack: boolean isEmpty()>();

        if $z7 == 0 goto label05;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label05:
        $r3 = "allow";

        pkg = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(aQName);

        $r4 = interfaceinvoke aAtts.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("local-only");

        if $r4 == null goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        isLocalOnly = $z5;

        pkg = interfaceinvoke aAtts.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("pkg");

        $r5 = interfaceinvoke aAtts.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("regex");

        if $r5 == null goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        regex = $z6;

        if pkg == null goto label12;

        $r8 = interfaceinvoke aAtts.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("exact-match");

        if $r8 == null goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        exactMatch = $z4;

        $r10 = new com.puppycrawl.tools.checkstyle.checks.imports.Guard;

        specialinvoke $r10.<com.puppycrawl.tools.checkstyle.checks.imports.Guard: void <init>(boolean,boolean,java.lang.String,boolean,boolean)>(pkg, isLocalOnly, pkg, exactMatch, regex);

        g = $r10;

        goto label13;

     label12:
        exactMatch = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.lang.String safeGet(org.xml.sax.Attributes,java.lang.String)>(aAtts, "class");

        $r7 = new com.puppycrawl.tools.checkstyle.checks.imports.Guard;

        specialinvoke $r7.<com.puppycrawl.tools.checkstyle.checks.imports.Guard: void <init>(boolean,boolean,java.lang.String,boolean)>(pkg, isLocalOnly, exactMatch, regex);

        g = $r7;

     label13:
        $r6 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $r9 = virtualinvoke $r6.<com.puppycrawl.tools.checkstyle.api.FastStack: java.lang.Object peek()>();

        exactMatch = (com.puppycrawl.tools.checkstyle.checks.imports.PkgControl) $r9;

        virtualinvoke exactMatch.<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl: void addGuard(com.puppycrawl.tools.checkstyle.checks.imports.Guard)>(g);

     label14:
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String)
    {
        com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader this;
        java.lang.String aNamespaceURI, aLocalName, aQName, $r0;
        boolean $z0, $z1;
        com.puppycrawl.tools.checkstyle.api.FastStack $r1, $r3;
        int $i0;
        java.lang.AssertionError $r4;

        this := @this: com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader;

        aNamespaceURI := @parameter0: java.lang.String;

        aLocalName := @parameter1: java.lang.String;

        aQName := @parameter2: java.lang.String;

        $r0 = "subpackage";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(aQName);

        if $z0 == 0 goto label2;

        $z1 = <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r3 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $i0 = virtualinvoke $r3.<com.puppycrawl.tools.checkstyle.api.FastStack: int size()>();

        if $i0 > 1 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        virtualinvoke $r1.<com.puppycrawl.tools.checkstyle.api.FastStack: java.lang.Object pop()>();

     label2:
        return;
    }

    static com.puppycrawl.tools.checkstyle.checks.imports.PkgControl load(java.net.URI) throws com.puppycrawl.tools.checkstyle.api.CheckstyleException
    {
        java.net.URI aUri;
        java.net.MalformedURLException e, $r3;
        java.net.URL $r0;
        org.xml.sax.InputSource $r1, e;
        com.puppycrawl.tools.checkstyle.checks.imports.PkgControl $r2;
        com.puppycrawl.tools.checkstyle.api.CheckstyleException $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r12, $r13;
        java.lang.String $r8, $r14;
        java.io.IOException $r9, e;
        java.io.InputStream is;

        aUri := @parameter0: java.net.URI;

     label1:
        $r0 = virtualinvoke aUri.<java.net.URI: java.net.URL toURL()>();

        is = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        e = $r3;

        $r4 = new com.puppycrawl.tools.checkstyle.api.CheckstyleException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syntax error in url ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aUri);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.puppycrawl.tools.checkstyle.api.CheckstyleException: void <init>(java.lang.String,java.lang.Throwable)>($r8, e);

        throw $r4;

     label4:
        $r9 := @caughtexception;

        e = $r9;

        $r10 = new com.puppycrawl.tools.checkstyle.api.CheckstyleException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to find ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aUri);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.puppycrawl.tools.checkstyle.api.CheckstyleException: void <init>(java.lang.String,java.lang.Throwable)>($r14, e);

        throw $r10;

     label5:
        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(is);

        e = $r1;

        $r2 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.checks.imports.PkgControl load(org.xml.sax.InputSource,java.net.URI)>(e, aUri);

        return $r2;

        catch java.net.MalformedURLException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    private static com.puppycrawl.tools.checkstyle.checks.imports.PkgControl load(org.xml.sax.InputSource, java.net.URI) throws com.puppycrawl.tools.checkstyle.api.CheckstyleException
    {
        org.xml.sax.InputSource aSource;
        java.net.URI aUri;
        com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader loader, $r0;
        com.puppycrawl.tools.checkstyle.checks.imports.PkgControl $r1;
        org.xml.sax.SAXException $r2, loader;
        com.puppycrawl.tools.checkstyle.api.CheckstyleException $r3, $r12, $r17;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r13, $r14, $r16, $r19, $r20, $r22;
        java.lang.String $r8, $r10, $r15, $r21;
        java.io.IOException $r11, loader;
        javax.xml.parsers.ParserConfigurationException $r18, loader;

        aSource := @parameter0: org.xml.sax.InputSource;

        aUri := @parameter1: java.net.URI;

     label1:
        $r0 = new com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader;

        specialinvoke $r0.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: void <init>()>();

        loader = $r0;

        virtualinvoke loader.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: void parseInputSource(org.xml.sax.InputSource)>(aSource);

        $r1 = specialinvoke loader.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.checks.imports.PkgControl getRoot()>();

     label2:
        return $r1;

     label3:
        $r18 := @caughtexception;

        loader = $r18;

        $r17 = new com.puppycrawl.tools.checkstyle.api.CheckstyleException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aUri);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.puppycrawl.tools.checkstyle.api.CheckstyleException: void <init>(java.lang.String,java.lang.Throwable)>($r21, loader);

        throw $r17;

     label4:
        $r2 := @caughtexception;

        loader = $r2;

        $r3 = new com.puppycrawl.tools.checkstyle.api.CheckstyleException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aUri);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r8 = virtualinvoke loader.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.puppycrawl.tools.checkstyle.api.CheckstyleException: void <init>(java.lang.String,java.lang.Throwable)>($r10, loader);

        throw $r3;

     label5:
        $r11 := @caughtexception;

        loader = $r11;

        $r12 = new com.puppycrawl.tools.checkstyle.api.CheckstyleException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to read ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aUri);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.puppycrawl.tools.checkstyle.api.CheckstyleException: void <init>(java.lang.String,java.lang.Throwable)>($r15, loader);

        throw $r12;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
    }

    private com.puppycrawl.tools.checkstyle.checks.imports.PkgControl getRoot()
    {
        com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader this;
        boolean $z0;
        com.puppycrawl.tools.checkstyle.api.FastStack $r0, $r3;
        java.lang.Object $r1;
        com.puppycrawl.tools.checkstyle.checks.imports.PkgControl $r2;
        int $i0;
        java.lang.AssertionError $r4;

        this := @this: com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader;

        $z0 = <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $i0 = virtualinvoke $r3.<com.puppycrawl.tools.checkstyle.api.FastStack: int size()>();

        if $i0 == 1 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: com.puppycrawl.tools.checkstyle.api.FastStack mStack>;

        $r1 = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.FastStack: java.lang.Object peek()>();

        $r2 = (com.puppycrawl.tools.checkstyle.checks.imports.PkgControl) $r1;

        return $r2;
    }

    private java.lang.String safeGet(org.xml.sax.Attributes, java.lang.String) throws org.xml.sax.SAXException
    {
        com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader this;
        org.xml.sax.Attributes aAtts;
        java.lang.String aName, retVal, $r4;
        org.xml.sax.SAXException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;

        this := @this: com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader;

        aAtts := @parameter0: org.xml.sax.Attributes;

        aName := @parameter1: java.lang.String;

        retVal = interfaceinvoke aAtts.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>(aName);

        if retVal != null goto label1;

        $r0 = new org.xml.sax.SAXException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missing attribute ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(aName);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label1:
        return retVal;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.util.HashMap $r1;
        java.util.Map $r2, $r4;

        <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.lang.String DTD_RESOURCE_NAME_1_1> = "com/puppycrawl/tools/checkstyle/checks/imports/import_control_1_1.dtd";

        <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.lang.String DTD_RESOURCE_NAME_1_0> = "com/puppycrawl/tools/checkstyle/checks/imports/import_control_1_0.dtd";

        <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.lang.String DTD_PUBLIC_ID_1_1> = "-//Puppy Crawl//DTD Import Control 1.1//EN";

        <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.lang.String DTD_PUBLIC_ID_1_0> = "-//Puppy Crawl//DTD Import Control 1.0//EN";

        $r0 = class "com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: boolean $assertionsDisabled> = $z1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.util.Map DTD_RESOURCE_BY_ID> = $r1;

        $r2 = <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.util.Map DTD_RESOURCE_BY_ID>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("-//Puppy Crawl//DTD Import Control 1.0//EN", "com/puppycrawl/tools/checkstyle/checks/imports/import_control_1_0.dtd");

        $r4 = <com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader: java.util.Map DTD_RESOURCE_BY_ID>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("-//Puppy Crawl//DTD Import Control 1.1//EN", "com/puppycrawl/tools/checkstyle/checks/imports/import_control_1_1.dtd");

        return;
    }
}
