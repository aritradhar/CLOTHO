abstract class com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck extends com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck
{

    void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck this;
        com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck;

        $r0 = <com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption: com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption NOSPACE>;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck: void <init>(java.lang.Enum,java.lang.Class)>($r0, class "com/puppycrawl/tools/checkstyle/checks/whitespace/PadOption");

        return;
    }

    protected void processLeft(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        java.lang.String line;
        int after, $i0, $i1, $i2, $i3, $i6, $i8;
        java.lang.String[] $r0;
        com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption $r1, $r3;
        java.lang.Enum $r2, $r4;
        char $c4, $c5, $c7;
        boolean $z0, $z1;
        java.lang.Object[] $r5, $r6;

        this := @this: com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: java.lang.String[] getLines()>();

        $i0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i1 = $i0 - 1;

        line = $r0[$i1];

        $i2 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        after = $i2 + 1;

        $i3 = virtualinvoke line.<java.lang.String: int length()>();

        if after >= $i3 goto label2;

        $r1 = <com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption: com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption NOSPACE>;

        $r2 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: java.lang.Enum getAbstractOption()>();

        if $r1 != $r2 goto label1;

        $c7 = virtualinvoke line.<java.lang.String: char charAt(int)>(after);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c7);

        if $z1 == 0 goto label1;

        $i8 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "(";

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i8, after, "ws.followed", $r6);

        goto label2;

     label1:
        $r3 = <com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption: com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption SPACE>;

        $r4 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: java.lang.Enum getAbstractOption()>();

        if $r3 != $r4 goto label2;

        $c4 = virtualinvoke line.<java.lang.String: char charAt(int)>(after);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);

        if $z0 != 0 goto label2;

        $c5 = virtualinvoke line.<java.lang.String: char charAt(int)>(after);

        if $c5 == 41 goto label2;

        $i6 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "(";

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i6, after, "ws.notFollowed", $r5);

     label2:
        return;
    }

    protected void processRight(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        java.lang.String line;
        int before, $i0, $i1, $i2, $i5, $i6, $i8;
        java.lang.String[] $r0;
        com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption $r1, $r3;
        java.lang.Enum $r2, $r4;
        char $c3, $c4, $c7;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r5, $r6;

        this := @this: com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: java.lang.String[] getLines()>();

        $i0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i1 = $i0 - 1;

        line = $r0[$i1];

        $i2 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        before = $i2 - 1;

        if before < 0 goto label2;

        $r1 = <com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption: com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption NOSPACE>;

        $r2 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: java.lang.Enum getAbstractOption()>();

        if $r1 != $r2 goto label1;

        $c7 = virtualinvoke line.<java.lang.String: char charAt(int)>(before);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c7);

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <com.puppycrawl.tools.checkstyle.api.Utils: boolean whitespaceBefore(int,java.lang.String)>(before, line);

        if $z2 != 0 goto label1;

        $i8 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = ")";

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i8, before, "ws.preceded", $r6);

        goto label2;

     label1:
        $r3 = <com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption: com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption SPACE>;

        $r4 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: java.lang.Enum getAbstractOption()>();

        if $r3 != $r4 goto label2;

        $c3 = virtualinvoke line.<java.lang.String: char charAt(int)>(before);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

        if $z0 != 0 goto label2;

        $c4 = virtualinvoke line.<java.lang.String: char charAt(int)>(before);

        if $c4 == 40 goto label2;

        $i5 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i6 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = ")";

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i5, $i6, "ws.notPreceded", $r5);

     label2:
        return;
    }
}
