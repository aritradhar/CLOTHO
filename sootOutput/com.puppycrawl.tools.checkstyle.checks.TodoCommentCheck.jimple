public class com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck extends com.puppycrawl.tools.checkstyle.api.Check
{
    private java.lang.String mFormat;
    private java.util.regex.Pattern mRegexp;

    public void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck this;
        java.lang.String $r0;
        java.util.regex.Pattern $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.api.Check: void <init>()>();

        this.<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck: java.lang.String mFormat> = "TODO:";

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck: java.lang.String mFormat>;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r0);

        this.<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck: java.util.regex.Pattern mRegexp> = $r1;

        return;
    }

    public boolean isCommentNodesRequired()
    {
        com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck;

        return 1;
    }

    public void setFormat(java.lang.String)
    {
        com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck this;
        java.lang.String aFormat;
        java.util.regex.Pattern $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck;

        aFormat := @parameter0: java.lang.String;

        this.<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck: java.lang.String mFormat> = aFormat;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(aFormat);

        this.<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck: java.util.regex.Pattern mRegexp> = $r0;

        return;
    }

    public int[] getDefaultTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck;

        $r0 = newarray (int)[1];

        $r0[0] = 154;

        return $r0;
    }

    public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        java.lang.String[] lines;
        int i, $i0, $i1, $i2;
        java.lang.String $r0, $r1, $r5;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;
        java.lang.Object[] $r4;

        this := @this: com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: java.lang.String getText()>();

        lines = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i = 0;

     label1:
        $i0 = lengthof lines;

        if i >= $i0 goto label3;

        $r2 = this.<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck: java.util.regex.Pattern mRegexp>;

        $r1 = lines[i];

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i2 = $i1 + i;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = this.<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck: java.lang.String mFormat>;

        $r4[0] = $r5;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck: void log(int,java.lang.String,java.lang.Object[])>($i2, "todo.match", $r4);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }
}
