public abstract class com.puppycrawl.tools.checkstyle.api.AbstractLoader extends org.xml.sax.helpers.DefaultHandler
{
    private final java.util.Map mPublicIdToResourceNameMap;
    private final org.xml.sax.XMLReader mParser;

    protected void <init>(java.lang.String, java.lang.String) throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        com.puppycrawl.tools.checkstyle.api.AbstractLoader this;
        java.lang.String aPublicId, aDtdResourceName;
        java.util.HashMap $r0;
        java.util.Map $r1;

        this := @this: com.puppycrawl.tools.checkstyle.api.AbstractLoader;

        aPublicId := @parameter0: java.lang.String;

        aDtdResourceName := @parameter1: java.lang.String;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(1);

        specialinvoke this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: void <init>(java.util.Map)>($r0);

        $r1 = this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: java.util.Map mPublicIdToResourceNameMap>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(aPublicId, aDtdResourceName);

        return;
    }

    protected void <init>(java.util.Map) throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        com.puppycrawl.tools.checkstyle.api.AbstractLoader this;
        java.util.Map aPublicIdToResourceNameMap;
        javax.xml.parsers.SAXParserFactory factory;
        java.util.HashMap $r0;
        javax.xml.parsers.SAXParser $r1;
        org.xml.sax.XMLReader $r2, $r3, $r4, $r5;

        this := @this: com.puppycrawl.tools.checkstyle.api.AbstractLoader;

        aPublicIdToResourceNameMap := @parameter0: java.util.Map;

        specialinvoke this.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r0 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>(aPublicIdToResourceNameMap);

        this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: java.util.Map mPublicIdToResourceNameMap> = $r0;

        factory = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke factory.<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)>(1);

        virtualinvoke factory.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke factory.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: org.xml.sax.XMLReader mParser> = $r2;

        $r3 = this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: org.xml.sax.XMLReader mParser>;

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(this);

        $r4 = this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: org.xml.sax.XMLReader mParser>;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>(this);

        $r5 = this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: org.xml.sax.XMLReader mParser>;

        interfaceinvoke $r5.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>(this);

        return;
    }

    public void parseInputSource(org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        com.puppycrawl.tools.checkstyle.api.AbstractLoader this;
        org.xml.sax.InputSource aInputSource;
        org.xml.sax.XMLReader $r0;

        this := @this: com.puppycrawl.tools.checkstyle.api.AbstractLoader;

        aInputSource := @parameter0: org.xml.sax.InputSource;

        $r0 = this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: org.xml.sax.XMLReader mParser>;

        interfaceinvoke $r0.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(aInputSource);

        return;
    }

    public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        com.puppycrawl.tools.checkstyle.api.AbstractLoader this;
        java.lang.String aPublicId, aSystemId, dtdResourceName, $r11;
        java.lang.ClassLoader loader;
        java.io.InputStream dtdIS;
        java.util.Map $r0, $r3;
        java.util.Set $r1;
        boolean $z0;
        org.xml.sax.InputSource $r2, $r6;
        java.lang.Object $r4;
        java.lang.Class $r5;
        java.lang.StringBuilder $r7, $r9, $r10;
        org.xml.sax.SAXException $r8;

        this := @this: com.puppycrawl.tools.checkstyle.api.AbstractLoader;

        aPublicId := @parameter0: java.lang.String;

        aSystemId := @parameter1: java.lang.String;

        $r0 = this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: java.util.Map mPublicIdToResourceNameMap>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(aPublicId);

        if $z0 == 0 goto label2;

        $r3 = this.<com.puppycrawl.tools.checkstyle.api.AbstractLoader: java.util.Map mPublicIdToResourceNameMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(aPublicId);

        dtdResourceName = (java.lang.String) $r4;

        $r5 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        loader = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        dtdIS = virtualinvoke loader.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(dtdResourceName);

        if dtdIS != null goto label1;

        $r8 = new org.xml.sax.SAXException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load internal dtd ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dtdResourceName);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label1:
        $r6 = new org.xml.sax.InputSource;

        specialinvoke $r6.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(dtdIS);

        return $r6;

     label2:
        $r2 = specialinvoke this.<org.xml.sax.helpers.DefaultHandler: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>(aPublicId, aSystemId);

        return $r2;
    }

    public void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        com.puppycrawl.tools.checkstyle.api.AbstractLoader this;
        org.xml.sax.SAXParseException aEx;

        this := @this: com.puppycrawl.tools.checkstyle.api.AbstractLoader;

        aEx := @parameter0: org.xml.sax.SAXParseException;

        throw aEx;
    }

    public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        com.puppycrawl.tools.checkstyle.api.AbstractLoader this;
        org.xml.sax.SAXParseException aEx;

        this := @this: com.puppycrawl.tools.checkstyle.api.AbstractLoader;

        aEx := @parameter0: org.xml.sax.SAXParseException;

        throw aEx;
    }

    public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        com.puppycrawl.tools.checkstyle.api.AbstractLoader this;
        org.xml.sax.SAXParseException aEx;

        this := @this: com.puppycrawl.tools.checkstyle.api.AbstractLoader;

        aEx := @parameter0: org.xml.sax.SAXParseException;

        throw aEx;
    }
}
