public final class BugTestPack.ApacheCommonLangMathBug.NumberUtils extends java.lang.Object
{

    public void <init>()
    {
        BugTestPack.ApacheCommonLangMathBug.NumberUtils r0;

        r0 := @this: BugTestPack.ApacheCommonLangMathBug.NumberUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int stringToInt(java.lang.String)
    {
        java.lang.String r0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: int stringToInt(java.lang.String,int)>(r0, 0);

        return $i0;
    }

    public static int stringToInt(java.lang.String, int)
    {
        java.lang.NumberFormatException $r0;
        java.lang.String r1;
        int i0, $i1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return $i1;

     label3:
        $r0 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.Number createNumber(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0, r1, r2, r3, r4, $r11, $r13, $r14, $r17, $r19, $r23, $r29, r44;
        char c0, $c17;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17;
        java.lang.Integer $r6, $r8;
        double $d0, $d1;
        java.math.BigDecimal $r7, $r16;
        float $f0, $f1, $f2;
        byte $b9, $b10, $b18, $b19;
        java.lang.NumberFormatException $r9, $r20, $r22, $r25, $r27, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        java.lang.StringBuilder $r10, $r12, $r18, $r21, $r24, $r30;
        java.lang.Long $r15, $r28;
        java.math.BigInteger $r26, $r38;
        java.lang.Float r39, r47;
        java.lang.Double r41, r49;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 != 0 goto label02;

        $r32 = new java.lang.NumberFormatException;

        specialinvoke $r32.<java.lang.NumberFormatException: void <init>(java.lang.String)>("\"\" is not a valid number.");

        throw $r32;

     label02:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z1 == 0 goto label03;

        return null;

     label03:
        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("0x");

        if $z2 != 0 goto label04;

        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("-0x");

        if $z3 == 0 goto label05;

     label04:
        $r6 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Integer createInteger(java.lang.String)>(r0);

        return $r6;

     label05:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(101);

        $i8 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(69);

        $i7 = $i6 + $i8;

        i2 = $i7 + 1;

        if i1 <= -1 goto label09;

        if i2 <= -1 goto label07;

        if i2 >= i1 goto label06;

        $r22 = new java.lang.NumberFormatException;

        $r24 = new java.lang.StringBuilder;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid number.");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r29);

        throw $r22;

     label06:
        $i26 = i1 + 1;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i26, i2);

        goto label08;

     label07:
        $i25 = i1 + 1;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i25);

     label08:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        goto label12;

     label09:
        if i2 <= -1 goto label10;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        goto label11;

     label10:
        r1 = r0;

     label11:
        r2 = null;

     label12:
        $z5 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);

        if $z5 != 0 goto label33;

        if i2 <= -1 goto label13;

        $i22 = virtualinvoke r0.<java.lang.String: int length()>();

        $i23 = $i22 - 1;

        if i2 >= $i23 goto label13;

        $i24 = i2 + 1;

        $i20 = virtualinvoke r0.<java.lang.String: int length()>();

        $i21 = $i20 - 1;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i24, $i21);

        goto label14;

     label13:
        r3 = null;

     label14:
        $i15 = virtualinvoke r0.<java.lang.String: int length()>();

        $i16 = $i15 - 1;

        r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i16);

        $z10 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: boolean isAllZeros(java.lang.String)>(r1);

        if $z10 == 0 goto label15;

        $z15 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: boolean isAllZeros(java.lang.String)>(r3);

        if $z15 == 0 goto label15;

        $z16 = 1;

        goto label16;

     label15:
        $z16 = 0;

     label16:
        z0 = $z16;

        lookupswitch(c0)
        {
            case 68: goto label26;
            case 70: goto label23;
            case 76: goto label17;
            case 100: goto label26;
            case 102: goto label23;
            case 108: goto label17;
            default: goto label32;
        };

     label17:
        if r2 != null goto label22;

        if r3 != null goto label22;

        $c17 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if $c17 != 45 goto label18;

        $r14 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(1);

        $z11 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: boolean isDigits(java.lang.String)>($r14);

        if $z11 != 0 goto label19;

     label18:
        $z12 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: boolean isDigits(java.lang.String)>(r4);

        if $z12 == 0 goto label22;

     label19:
        $r15 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Long createLong(java.lang.String)>(r4);

     label20:
        return $r15;

     label21:
        $r31 := @caughtexception;

        $r26 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>(r4);

        return $r26;

     label22:
        $r9 = new java.lang.NumberFormatException;

        $r10 = new java.lang.StringBuilder;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid number.");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label23:
        r39 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Float createFloat(java.lang.String)>(r4);

        $z14 = virtualinvoke r39.<java.lang.Float: boolean isInfinite()>();

        if $z14 != 0 goto label26;

        $f2 = virtualinvoke r39.<java.lang.Float: float floatValue()>();

        $b19 = $f2 cmpl 0.0F;

        if $b19 != 0 goto label24;

        if z0 == 0 goto label26;

     label24:
        return r39;

     label25:
        $r35 := @caughtexception;

     label26:
        r41 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Double createDouble(java.lang.String)>(r4);

        $z13 = virtualinvoke r41.<java.lang.Double: boolean isInfinite()>();

        if $z13 != 0 goto label29;

        $f1 = virtualinvoke r41.<java.lang.Double: float floatValue()>();

        $d1 = (double) $f1;

        $b18 = $d1 cmpl 0.0;

        if $b18 != 0 goto label27;

        if z0 == 0 goto label29;

     label27:
        return r41;

     label28:
        $r27 := @caughtexception;

     label29:
        $r16 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(r4);

     label30:
        return $r16;

     label31:
        $r33 := @caughtexception;

     label32:
        $r20 = new java.lang.NumberFormatException;

        $r21 = new java.lang.StringBuilder;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid number.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r19);

        throw $r20;

     label33:
        if i2 <= -1 goto label34;

        $i13 = virtualinvoke r0.<java.lang.String: int length()>();

        $i14 = $i13 - 1;

        if i2 >= $i14 goto label34;

        $i11 = i2 + 1;

        $i12 = virtualinvoke r0.<java.lang.String: int length()>();

        r44 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i11, $i12);

        goto label35;

     label34:
        r44 = null;

     label35:
        if r2 != null goto label42;

        if r44 != null goto label42;

     label36:
        $r8 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Integer createInteger(java.lang.String)>(r0);

     label37:
        return $r8;

     label38:
        $r25 := @caughtexception;

     label39:
        $r28 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Long createLong(java.lang.String)>(r0);

     label40:
        return $r28;

     label41:
        $r37 := @caughtexception;

        $r38 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.math.BigInteger createBigInteger(java.lang.String)>(r0);

        return $r38;

     label42:
        $z4 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: boolean isAllZeros(java.lang.String)>(r1);

        if $z4 == 0 goto label43;

        $z9 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: boolean isAllZeros(java.lang.String)>(r44);

        if $z9 == 0 goto label43;

        $z8 = 1;

        goto label44;

     label43:
        $z8 = 0;

     label44:
        z17 = $z8;

     label45:
        r47 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Float createFloat(java.lang.String)>(r0);

        $z6 = virtualinvoke r47.<java.lang.Float: boolean isInfinite()>();

        if $z6 != 0 goto label48;

        $f0 = virtualinvoke r47.<java.lang.Float: float floatValue()>();

        $b10 = $f0 cmpl 0.0F;

        if $b10 != 0 goto label46;

        if z17 == 0 goto label48;

     label46:
        return r47;

     label47:
        $r36 := @caughtexception;

     label48:
        r49 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Double createDouble(java.lang.String)>(r0);

        $z7 = virtualinvoke r49.<java.lang.Double: boolean isInfinite()>();

        if $z7 != 0 goto label51;

        $d0 = virtualinvoke r49.<java.lang.Double: double doubleValue()>();

        $b9 = $d0 cmpl 0.0;

        if $b9 != 0 goto label49;

        if z17 == 0 goto label51;

     label49:
        return r49;

     label50:
        $r34 := @caughtexception;

     label51:
        $r7 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.math.BigDecimal createBigDecimal(java.lang.String)>(r0);

        return $r7;

        catch java.lang.NumberFormatException from label19 to label20 with label21;
        catch java.lang.NumberFormatException from label23 to label24 with label25;
        catch java.lang.NumberFormatException from label26 to label27 with label28;
        catch java.lang.NumberFormatException from label29 to label30 with label31;
        catch java.lang.NumberFormatException from label36 to label37 with label38;
        catch java.lang.NumberFormatException from label39 to label40 with label41;
        catch java.lang.NumberFormatException from label45 to label46 with label47;
        catch java.lang.NumberFormatException from label48 to label49 with label50;
    }

    private static boolean isAllZeros(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i3;
        char $c2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 1;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        i0 = $i1 - 1;

        goto label4;

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        if $c2 == 48 goto label3;

        return 0;

     label3:
        i0 = i0 + -1;

     label4:
        if i0 >= 0 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 <= 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    public static java.lang.Float createFloat(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Float $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Double createDouble(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Double $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Integer createInteger(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Integer $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.Long createLong(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Long $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r0);

        return $r1;
    }

    public static java.math.BigInteger createBigInteger(java.lang.String)
    {
        java.lang.String r0;
        java.math.BigInteger r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        return r1;
    }

    public static java.math.BigDecimal createBigDecimal(java.lang.String)
    {
        java.lang.String r0;
        java.math.BigDecimal r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.math.BigDecimal;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        return r1;
    }

    public static boolean isDigits(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i1, $i2;
        char $c3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        i0 = 0;

        goto label5;

     label3:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c3);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        i0 = i0 + 1;

     label5:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 < $i2 goto label3;

        return 1;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.Number r1;
        java.io.PrintStream $r2;

        r0 := @parameter0: java.lang.String[];

        r1 = staticinvoke <BugTestPack.ApacheCommonLangMathBug.NumberUtils: java.lang.Number createNumber(java.lang.String)>("L");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>(r1);

        return;
    }
}
