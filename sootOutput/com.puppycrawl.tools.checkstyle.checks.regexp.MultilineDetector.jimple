class com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector extends java.lang.Object
{
    private final com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions;
    private int mCurrentMatches;
    private java.util.regex.Matcher mMatcher;
    private com.puppycrawl.tools.checkstyle.api.FileText mText;

    public void <init>(com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions)
    {
        com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector this;
        com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions aOptions;

        this := @this: com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector;

        aOptions := @parameter0: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions> = aOptions;

        return;
    }

    public void processLines(com.puppycrawl.tools.checkstyle.api.FileText)
    {
        com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector this;
        com.puppycrawl.tools.checkstyle.api.FileText aText, $r2;
        com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions $r0;
        java.util.regex.Pattern $r1;
        java.lang.CharSequence $r3;
        java.util.regex.Matcher $r4;

        this := @this: com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector;

        aText := @parameter0: com.puppycrawl.tools.checkstyle.api.FileText;

        this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.api.FileText mText> = aText;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: void resetState()>();

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r1 = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: java.util.regex.Pattern getPattern()>();

        $r2 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.api.FileText mText>;

        $r3 = virtualinvoke $r2.<com.puppycrawl.tools.checkstyle.api.FileText: java.lang.CharSequence getFullText()>();

        $r4 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: java.util.regex.Matcher mMatcher> = $r4;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: void findMatch()>();

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: void finish()>();

        return;
    }

    private void findMatch()
    {
        com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector this;
        boolean foundMatch, $z0, $z1;
        com.puppycrawl.tools.checkstyle.api.LineColumn start, end;
        java.util.regex.Matcher $r0, $r1, $r3, $r20;
        com.puppycrawl.tools.checkstyle.api.FileText $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions $r5, $r7, $r9, $r12, $r15, $r17;
        com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor $r6;
        java.lang.String $r8, $r10, $r13, $r21;
        com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter $r11, $r18;
        java.lang.Object[] $r14, $r16;
        java.util.regex.Pattern $r19;

        this := @this: com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector;

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: java.util.regex.Matcher mMatcher>;

        foundMatch = virtualinvoke $r0.<java.util.regex.Matcher: boolean find()>();

        if foundMatch != 0 goto label1;

        return;

     label1:
        $r2 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.api.FileText mText>;

        $r1 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: java.util.regex.Matcher mMatcher>;

        $i0 = virtualinvoke $r1.<java.util.regex.Matcher: int start()>();

        start = virtualinvoke $r2.<com.puppycrawl.tools.checkstyle.api.FileText: com.puppycrawl.tools.checkstyle.api.LineColumn lineColumn(int)>($i0);

        $r4 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.api.FileText mText>;

        $r3 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: java.util.regex.Matcher mMatcher>;

        $i1 = virtualinvoke $r3.<java.util.regex.Matcher: int end()>();

        end = virtualinvoke $r4.<com.puppycrawl.tools.checkstyle.api.FileText: com.puppycrawl.tools.checkstyle.api.LineColumn lineColumn(int)>($i1);

        $r5 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r6 = virtualinvoke $r5.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor getSuppressor()>();

        $i3 = virtualinvoke start.<com.puppycrawl.tools.checkstyle.api.LineColumn: int getLine()>();

        $i2 = virtualinvoke start.<com.puppycrawl.tools.checkstyle.api.LineColumn: int getColumn()>();

        $i5 = virtualinvoke end.<com.puppycrawl.tools.checkstyle.api.LineColumn: int getLine()>();

        $i4 = virtualinvoke end.<com.puppycrawl.tools.checkstyle.api.LineColumn: int getColumn()>();

        $z0 = interfaceinvoke $r6.<com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor: boolean shouldSuppress(int,int,int,int)>($i3, $i2, $i5, $i4);

        if $z0 != 0 goto label3;

        $i6 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: int mCurrentMatches>;

        $i7 = $i6 + 1;

        this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: int mCurrentMatches> = $i7;

        $i9 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: int mCurrentMatches>;

        $r7 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $i8 = virtualinvoke $r7.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: int getMaximum()>();

        if $i9 <= $i8 goto label3;

        $r8 = "";

        $r9 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r10 = virtualinvoke $r9.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: java.lang.String getMessage()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label2;

        $r17 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r18 = virtualinvoke $r17.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter getReporter()>();

        $i11 = virtualinvoke start.<com.puppycrawl.tools.checkstyle.api.LineColumn: int getLine()>();

        $r16 = newarray (java.lang.Object)[1];

        $r20 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: java.util.regex.Matcher mMatcher>;

        $r19 = virtualinvoke $r20.<java.util.regex.Matcher: java.util.regex.Pattern pattern()>();

        $r21 = virtualinvoke $r19.<java.util.regex.Pattern: java.lang.String toString()>();

        $r16[0] = $r21;

        virtualinvoke $r18.<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter: void log(int,java.lang.String,java.lang.Object[])>($i11, "regexp.exceeded", $r16);

        goto label3;

     label2:
        $r12 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r11 = virtualinvoke $r12.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter getReporter()>();

        $i10 = virtualinvoke start.<com.puppycrawl.tools.checkstyle.api.LineColumn: int getLine()>();

        $r15 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r13 = virtualinvoke $r15.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: java.lang.String getMessage()>();

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke $r11.<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter: void log(int,java.lang.String,java.lang.Object[])>($i10, $r13, $r14);

     label3:
        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: void findMatch()>();

        return;
    }

    private void finish()
    {
        com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector this;
        com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions $r0, $r1, $r4, $r6, $r9, $r11, $r13;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r7, $r15;
        boolean $z0;
        com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter $r5, $r10;
        java.lang.Object[] $r8, $r12;
        java.lang.Integer $r14;

        this := @this: com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector;

        $i0 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: int mCurrentMatches>;

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $i1 = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: int getMinimum()>();

        if $i0 >= $i1 goto label2;

        $r2 = "";

        $r1 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r3 = virtualinvoke $r1.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r9 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r10 = virtualinvoke $r9.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter getReporter()>();

        $r12 = newarray (java.lang.Object)[2];

        $r11 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $i2 = virtualinvoke $r11.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: int getMinimum()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r12[0] = $r14;

        $r13 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r15 = virtualinvoke $r13.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: java.lang.String getFormat()>();

        $r12[1] = $r15;

        virtualinvoke $r10.<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter: void log(int,java.lang.String,java.lang.Object[])>(0, "regexp.minimum", $r12);

        goto label2;

     label1:
        $r4 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r5 = virtualinvoke $r4.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter getReporter()>();

        $r6 = this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions mOptions>;

        $r7 = virtualinvoke $r6.<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions: java.lang.String getMessage()>();

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r5.<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter: void log(int,java.lang.String,java.lang.Object[])>(0, $r7, $r8);

     label2:
        return;
    }

    private void resetState()
    {
        com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector;

        this.<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector: int mCurrentMatches> = 0;

        return;
    }
}
