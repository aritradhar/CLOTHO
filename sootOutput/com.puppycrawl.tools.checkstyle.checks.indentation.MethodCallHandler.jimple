public class com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler extends com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler
{

    public void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler this;
        com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck aIndentCheck;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler aParent;
        int $i0;
        java.lang.String $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler;

        aIndentCheck := @parameter0: com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck;

        aAST := @parameter1: com.puppycrawl.tools.checkstyle.api.DetailAST;

        aParent := @parameter2: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler;

        $i0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i0 != 27 goto label1;

        $r0 = "method call";

        goto label2;

     label1:
        $r0 = "ctor call";

     label2:
        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler: void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck,java.lang.String,com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)>(aIndentCheck, $r0, aAST, aParent);

        return;
    }

    protected com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel getLevelImpl()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler this, container;
        com.puppycrawl.tools.checkstyle.api.DetailAST main, dot, target, dot1, target1, $r2, $r3, $r4, $r5, $r10, $r11;
        com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler $r0, $r8, main;
        boolean $z0, $z1, $z2;
        com.puppycrawl.tools.checkstyle.checks.indentation.LineSet $r1, container;
        com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel $r6, $r7, $r9, $r12, $r13, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, main, dot;
        int[] $r14;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler getParent()>();

        $z0 = $r0 instanceof com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler;

        if $z0 == 0 goto label6;

        $r8 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler getParent()>();

        container = (com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler) $r8;

        if container == null goto label3;

        $r10 = virtualinvoke container.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r11 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $z2 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: boolean areOnSameLine(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST)>($r10, $r11);

        if $z2 == 0 goto label1;

        $r16 = virtualinvoke container.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel getLevel()>();

        return $r16;

     label1:
        main = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        dot = virtualinvoke main.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        target = virtualinvoke dot.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        $i0 = virtualinvoke dot.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i0 != 60 goto label2;

        $i2 = virtualinvoke target.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i2 != 27 goto label2;

        dot1 = virtualinvoke target.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        target1 = virtualinvoke dot1.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        $i3 = virtualinvoke dot1.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i3 != 60 goto label2;

        $i4 = virtualinvoke target1.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i4 != 27 goto label2;

        $r15 = virtualinvoke container.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel getLevel()>();

        return $r15;

     label2:
        $r13 = new com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel;

        $r12 = virtualinvoke container.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel getLevel()>();

        $r14 = newarray (int)[1];

        $i1 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: int getBasicOffset()>();

        $r14[0] = $i1;

        specialinvoke $r13.<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel: void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel,int[])>($r12, $r14);

        return $r13;

     label3:
        main = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler getParent()>();

     label4:
        $z1 = main instanceof com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler;

        if $z1 == 0 goto label5;

        main = virtualinvoke main.<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler getParent()>();

        goto label4;

     label5:
        $r9 = virtualinvoke main.<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel suggestedChildLevel(com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)>(this);

        return $r9;

     label6:
        $r1 = new com.puppycrawl.tools.checkstyle.checks.indentation.LineSet;

        specialinvoke $r1.<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet: void <init>()>();

        container = $r1;

        $r2 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r3 = virtualinvoke $r2.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: void findSubtreeLines(com.puppycrawl.tools.checkstyle.checks.indentation.LineSet,com.puppycrawl.tools.checkstyle.api.DetailAST,boolean)>(container, $r3, 1);

        main = virtualinvoke container.<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet: int firstLineCol()>();

        $r4 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r5 = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstAst(com.puppycrawl.tools.checkstyle.api.DetailAST)>($r4);

        dot = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: int getLineStart(com.puppycrawl.tools.checkstyle.api.DetailAST)>($r5);

        if dot == main goto label7;

        $r6 = new com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel;

        specialinvoke $r6.<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel: void <init>(int)>(dot);

        return $r6;

     label7:
        $r7 = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel getLevelImpl()>();

        return $r7;
    }

    private com.puppycrawl.tools.checkstyle.api.DetailAST getFirstAst(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAst, ast;
        int $i0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler;

        aAst := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        ast = virtualinvoke aAst.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

     label1:
        if ast == null goto label2;

        $i0 = virtualinvoke ast.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i0 != 60 goto label2;

        ast = virtualinvoke ast.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        goto label1;

     label2:
        if ast != null goto label3;

        ast = aAst;

     label3:
        return ast;
    }

    public com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel suggestedChildLevel(com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler)
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler this;
        com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler aChild;
        com.puppycrawl.tools.checkstyle.api.DetailAST first, $r0, $r1, $r2, $r3, $r4;
        int indentLevel, $i0;
        boolean $z0;
        com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel $r5;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler;

        aChild := @parameter0: com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        first = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        indentLevel = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: int getLineStart(com.puppycrawl.tools.checkstyle.api.DetailAST)>(first);

        $r1 = virtualinvoke aChild.<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r2 = virtualinvoke $r1.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        $r3 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r4 = virtualinvoke $r3.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        $z0 = staticinvoke <com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: boolean areOnSameLine(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST)>($r2, $r4);

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: int getBasicOffset()>();

        indentLevel = indentLevel + $i0;

     label1:
        $r5 = new com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel;

        specialinvoke $r5.<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel: void <init>(int)>(indentLevel);

        return $r5;
    }

    public void checkIndentation()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler this;
        com.puppycrawl.tools.checkstyle.api.DetailAST exprNode, methodName, lparen, rparen, $r0, $r1, $r2, $r4, $r5, $r6, $r11, $r13;
        com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler$1 lineWrap, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel $r3, $r7, $r8;
        int[] $r9;
        com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck $r12;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler;

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        exprNode = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getParent()>();

        $r1 = virtualinvoke exprNode.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getParent()>();

        $i0 = virtualinvoke $r1.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i0 == 73 goto label1;

        $r13 = virtualinvoke exprNode.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getParent()>();

        $i4 = virtualinvoke $r13.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if $i4 == 7 goto label1;

        return;

     label1:
        $r2 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        methodName = virtualinvoke $r2.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChild()>();

        $r3 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel getLevel()>();

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: void checkExpressionSubtree(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel,boolean,boolean)>(methodName, $r3, 0, 0);

        lparen = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r4 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        rparen = virtualinvoke $r4.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST findFirstToken(int)>(78);

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: void checkLParen(com.puppycrawl.tools.checkstyle.api.DetailAST)>(lparen);

        $i2 = virtualinvoke rparen.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i1 = virtualinvoke lparen.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        if $i2 != $i1 goto label2;

        return;

     label2:
        $r6 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        $r5 = virtualinvoke $r6.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST findFirstToken(int)>(35);

        $r8 = new com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel;

        $r7 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel getLevel()>();

        $r9 = newarray (int)[1];

        $i3 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: int getBasicOffset()>();

        $r9[0] = $i3;

        specialinvoke $r8.<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel: void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel,int[])>($r7, $r9);

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: void checkExpressionSubtree(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel,boolean,boolean)>($r5, $r8, 0, 1);

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: void checkRParen(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST)>(lparen, rparen);

        $r10 = new com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler$1;

        $r12 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck getIndentCheck()>();

        $r11 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler: com.puppycrawl.tools.checkstyle.api.DetailAST getMainAst()>();

        specialinvoke $r10.<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler$1: void <init>(com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler,com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck,com.puppycrawl.tools.checkstyle.api.DetailAST)>(this, $r12, $r11);

        lineWrap = $r10;

        virtualinvoke lineWrap.<com.puppycrawl.tools.checkstyle.checks.indentation.LineWrappingHandler: void checkIndentation()>();

        return;
    }

    protected boolean shouldIncreaseIndent()
    {
        com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler;

        return 0;
    }
}
