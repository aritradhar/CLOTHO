public class com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck extends com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck
{

    public void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck this;
        com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck;

        $r0 = <com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption: com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption EOL>;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck: void <init>(java.lang.Enum,java.lang.Class)>($r0, class "com/puppycrawl/tools/checkstyle/checks/whitespace/WrapOption");

        return;
    }

    public int[] getDefaultTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck;

        $r0 = newarray (int)[2];

        $r0[0] = 60;

        $r0[1] = 75;

        return $r0;
    }

    public int[] getAcceptableTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck;

        $r0 = newarray (int)[9];

        $r0[0] = 60;

        $r0[1] = 75;

        $r0[2] = 46;

        $r0[3] = 175;

        $r0[4] = 174;

        $r0[5] = 77;

        $r0[6] = 78;

        $r0[7] = 17;

        $r0[8] = 49;

        return $r0;
    }

    public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        java.lang.String text, currentLine, substringAfterToken, substringBeforeToken, $r1, $r2;
        int colNo, lineNo, $i0, $i1, $i2, $i3, $i4;
        com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption wSp, $r3, $r5;
        java.lang.String[] $r0;
        java.lang.Enum $r4;
        java.lang.Object[] $r6, $r7;

        this := @this: com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        text = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: java.lang.String getText()>();

        colNo = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        lineNo = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $r0 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck: java.lang.String[] getLines()>();

        $i0 = lineNo - 1;

        currentLine = $r0[$i0];

        $i1 = virtualinvoke text.<java.lang.String: int length()>();

        $i2 = colNo + $i1;

        $r1 = virtualinvoke currentLine.<java.lang.String: java.lang.String substring(int)>($i2);

        substringAfterToken = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r2 = virtualinvoke currentLine.<java.lang.String: java.lang.String substring(int,int)>(0, colNo);

        substringBeforeToken = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck: java.lang.Enum getAbstractOption()>();

        wSp = (com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption) $r4;

        $r3 = <com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption: com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption EOL>;

        if wSp != $r3 goto label1;

        $i4 = virtualinvoke substringBeforeToken.<java.lang.String: int length()>();

        if $i4 != 0 goto label1;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = text;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck: void log(int,int,java.lang.String,java.lang.Object[])>(lineNo, colNo, "line.previous", $r7);

        goto label2;

     label1:
        $r5 = <com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption: com.puppycrawl.tools.checkstyle.checks.whitespace.WrapOption NL>;

        if wSp != $r5 goto label2;

        $i3 = virtualinvoke substringAfterToken.<java.lang.String: int length()>();

        if $i3 != 0 goto label2;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = text;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck: void log(int,int,java.lang.String,java.lang.Object[])>(lineNo, colNo, "line.new", $r6);

     label2:
        return;
    }
}
