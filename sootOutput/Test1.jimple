public class Test1 extends java.lang.Object
{

    public void <init>()
    {
        Test1 r0;

        r0 := @this: Test1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int[] r1, $r2;
        byte b0, b1, b2;
        int i3;
        Test1 $r3;
        java.io.PrintStream $r4;

        r0 := @parameter0: java.lang.String[];
        $r2 = newarray (int)[4];
        $r2[0] = 10;
        $r2[1] = 11;
        $r2[2] = 12;
        $r2[3] = 13;
        r1 = $r2;
        b0 = 2;
        b1 = 0;
        b2 = -1;
        $r3 = new Test1;
        specialinvoke $r3.<Test1: void <init>()>();
        i3 = virtualinvoke $r3.<Test1: int fun(int[],int,int,int)>(r1, b0, b1, b2);
        $r4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r4.<java.io.PrintStream: void println(int)>(i3);
        return;
    }

    public int fun(int[], int, int, int)
    {
        Test1 r0;
        int[] r1, r11;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8;
        java.util.ArrayList $r2, r3;
        java.util.Iterator r4;
        java.lang.Integer[] r5, r7, r12, $r27;
        java.lang.Integer r6, $r13, $r14, $r15, $r16, $r28, $r38;
        java.lang.Double r8, r10, $r29, $r30;
        double d0, $d1, $d2, $d3, $d4, $d5;
        java.io.PrintStream $r17, $r19, $r21, $r23, $r25, $r31, $r32;
        java.lang.Object $r18, $r20, $r22, $r24, $r26;
        java.lang.StringBuilder $r33, $r35, $r36;
        java.lang.String $r34, $r37;

        r0 := @this: Test1;
        r1 := @parameter0: int[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);
        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);
        r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();
        $r17 = <java.lang.System: java.io.PrintStream out>;
        $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.Object)>($r18);
        $r19 = <java.lang.System: java.io.PrintStream out>;
        $r20 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.Object)>($r20);
        $r21 = <java.lang.System: java.io.PrintStream out>;
        $r22 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.Object)>($r22);
        $r23 = <java.lang.System: java.io.PrintStream out>;
        $r24 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.Object)>($r24);
        $r25 = <java.lang.System: java.io.PrintStream out>;
        $r26 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.Object)>($r26);
        $r27 = newarray (java.lang.Integer)[1];
        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
        $r27[0] = $r28;
        r5 = $r27;
        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);
        r7 = r5;
        r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.3);
        staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.9);
        $r29 = (java.lang.Double) r7;
        $d1 = virtualinvoke $r29.<java.lang.Double: double doubleValue()>();
        $i7 = virtualinvoke r6.<java.lang.Integer: int intValue()>();
        $d2 = (double) $i7;
        d0 = $d1 + $d2;
        $r30 = (java.lang.Double) r7;
        $d3 = virtualinvoke $r30.<java.lang.Double: double doubleValue()>();
        $d4 = virtualinvoke r8.<java.lang.Double: double doubleValue()>();
        $d5 = $d3 + $d4;
        r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);
        $r31 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.Object)>(r10);
        r11 = newarray (int)[i2];
        r12 = newarray (java.lang.Integer)[i2];
        $r32 = <java.lang.System: java.io.PrintStream out>;
        $r33 = new java.lang.StringBuilder;
        $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>($r34);
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r37);
        i3 = i0 + i1;
        i4 = i0 / i1;
        i5 = r1[i3];
        $i8 = i0 - i1;
        i6 = r1[$i8];
        r11[0] = 9999;
        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        r12[0] = $r38;
        return i4;
    }
}
