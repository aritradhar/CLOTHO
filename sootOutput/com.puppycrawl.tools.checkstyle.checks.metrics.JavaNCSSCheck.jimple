public class com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck extends com.puppycrawl.tools.checkstyle.api.Check
{
    private static final int FILE_MAX_NCSS;
    private static final int CLASS_MAX_NCSS;
    private static final int METHOD_MAX_NCSS;
    private int mFileMax;
    private int mClassMax;
    private int mMethodMax;
    private com.puppycrawl.tools.checkstyle.api.FastStack mCounters;

    public void <init>()
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        specialinvoke this.<com.puppycrawl.tools.checkstyle.api.Check: void <init>()>();

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mFileMax> = 2000;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mClassMax> = 1500;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mMethodMax> = 50;

        return;
    }

    public int[] getDefaultTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        $r0 = newarray (int)[28];

        $r0[0] = 14;

        $r0[1] = 15;

        $r0[2] = 9;

        $r0[3] = 8;

        $r0[4] = 11;

        $r0[5] = 12;

        $r0[6] = 16;

        $r0[7] = 31;

        $r0[8] = 10;

        $r0[9] = 44;

        $r0[10] = 43;

        $r0[11] = 85;

        $r0[12] = 94;

        $r0[13] = 86;

        $r0[14] = 87;

        $r0[15] = 93;

        $r0[16] = 91;

        $r0[17] = 88;

        $r0[18] = 89;

        $r0[19] = 90;

        $r0[20] = 92;

        $r0[21] = 68;

        $r0[22] = 98;

        $r0[23] = 99;

        $r0[24] = 29;

        $r0[25] = 22;

        $r0[26] = 95;

        $r0[27] = 96;

        return $r0;
    }

    public int[] getRequiredTokens()
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        int[] $r0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        $r0 = newarray (int)[28];

        $r0[0] = 14;

        $r0[1] = 15;

        $r0[2] = 9;

        $r0[3] = 8;

        $r0[4] = 11;

        $r0[5] = 12;

        $r0[6] = 16;

        $r0[7] = 31;

        $r0[8] = 10;

        $r0[9] = 44;

        $r0[10] = 43;

        $r0[11] = 85;

        $r0[12] = 94;

        $r0[13] = 86;

        $r0[14] = 87;

        $r0[15] = 93;

        $r0[16] = 91;

        $r0[17] = 88;

        $r0[18] = 89;

        $r0[19] = 90;

        $r0[20] = 92;

        $r0[21] = 68;

        $r0[22] = 98;

        $r0[23] = 99;

        $r0[24] = 29;

        $r0[25] = 22;

        $r0[26] = 95;

        $r0[27] = 96;

        return $r0;
    }

    public void beginTree(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aRootAST;
        com.puppycrawl.tools.checkstyle.api.FastStack $r0, $r2;
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter $r1;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aRootAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = new com.puppycrawl.tools.checkstyle.api.FastStack;

        specialinvoke $r0.<com.puppycrawl.tools.checkstyle.api.FastStack: void <init>()>();

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: com.puppycrawl.tools.checkstyle.api.FastStack mCounters> = $r0;

        $r2 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: com.puppycrawl.tools.checkstyle.api.FastStack mCounters>;

        $r1 = new com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter;

        specialinvoke $r1.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter: void <init>(com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$1)>(null);

        virtualinvoke $r2.<com.puppycrawl.tools.checkstyle.api.FastStack: void push(java.lang.Object)>($r1);

        return;
    }

    public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        int tokenType;
        java.util.Iterator i$;
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter c, $r0;
        com.puppycrawl.tools.checkstyle.api.FastStack $r1, $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        tokenType = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if 14 == tokenType goto label1;

        if 9 == tokenType goto label1;

        if 8 == tokenType goto label1;

        if 12 == tokenType goto label1;

        if 11 != tokenType goto label2;

     label1:
        $r1 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: com.puppycrawl.tools.checkstyle.api.FastStack mCounters>;

        $r0 = new com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter;

        specialinvoke $r0.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter: void <init>(com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$1)>(null);

        virtualinvoke $r1.<com.puppycrawl.tools.checkstyle.api.FastStack: void push(java.lang.Object)>($r0);

     label2:
        $z0 = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: boolean isCountable(com.puppycrawl.tools.checkstyle.api.DetailAST)>(aAST);

        if $z0 == 0 goto label4;

        $r2 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: com.puppycrawl.tools.checkstyle.api.FastStack mCounters>;

        i$ = virtualinvoke $r2.<com.puppycrawl.tools.checkstyle.api.FastStack: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>();

        c = (com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter) $r3;

        virtualinvoke c.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter: void increment()>();

        goto label3;

     label4:
        return;
    }

    public void leaveToken(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        int tokenType, count, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter counter;
        com.puppycrawl.tools.checkstyle.api.FastStack $r0, $r4;
        java.lang.Object $r1, $r6;
        java.lang.Object[] $r2, $r7;
        java.lang.Integer $r3, $r5, $r8, $r9;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        tokenType = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if 9 == tokenType goto label1;

        if 8 == tokenType goto label1;

        if 12 == tokenType goto label1;

        if 11 != tokenType goto label3;

     label1:
        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: com.puppycrawl.tools.checkstyle.api.FastStack mCounters>;

        $r1 = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.FastStack: java.lang.Object pop()>();

        counter = (com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter) $r1;

        count = virtualinvoke counter.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter: int getCount()>();

        $i0 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mMethodMax>;

        if count <= $i0 goto label2;

        $i1 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i2 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(count);

        $r2[0] = $r3;

        $i3 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mMethodMax>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r2[1] = $r5;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i1, $i2, "ncss.method", $r2);

     label2:
        goto label4;

     label3:
        if 14 != tokenType goto label4;

        $r4 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: com.puppycrawl.tools.checkstyle.api.FastStack mCounters>;

        $r6 = virtualinvoke $r4.<com.puppycrawl.tools.checkstyle.api.FastStack: java.lang.Object pop()>();

        counter = (com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter) $r6;

        count = virtualinvoke counter.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter: int getCount()>();

        $i5 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mClassMax>;

        if count <= $i5 goto label4;

        $i4 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i6 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(count);

        $r7[0] = $r8;

        $i7 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mClassMax>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r7[1] = $r9;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i4, $i6, "ncss.class", $r7);

     label4:
        return;
    }

    public void finishTree(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aRootAST;
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter counter;
        int count, $i0, $i1, $i2, $i3;
        com.puppycrawl.tools.checkstyle.api.FastStack $r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aRootAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: com.puppycrawl.tools.checkstyle.api.FastStack mCounters>;

        $r1 = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.FastStack: java.lang.Object pop()>();

        counter = (com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter) $r1;

        count = virtualinvoke counter.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter: int getCount()>();

        $i0 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mFileMax>;

        if count <= $i0 goto label1;

        $i1 = virtualinvoke aRootAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getLineNo()>();

        $i2 = virtualinvoke aRootAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getColumnNo()>();

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(count);

        $r2[0] = $r3;

        $i3 = this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mFileMax>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r2[1] = $r4;

        virtualinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: void log(int,int,java.lang.String,java.lang.Object[])>($i1, $i2, "ncss.file", $r2);

     label1:
        return;
    }

    public void setFileMaximum(int)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        int aFileMax;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aFileMax := @parameter0: int;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mFileMax> = aFileMax;

        return;
    }

    public void setClassMaximum(int)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        int aClassMax;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aClassMax := @parameter0: int;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mClassMax> = aClassMax;

        return;
    }

    public void setMethodMaximum(int)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        int aMethodMax;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aMethodMax := @parameter0: int;

        this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int mMethodMax> = aMethodMax;

        return;
    }

    private boolean isCountable(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST;
        boolean countable;
        int tokenType;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        countable = 1;

        tokenType = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if 29 != tokenType goto label1;

        countable = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: boolean isExpressionCountable(com.puppycrawl.tools.checkstyle.api.DetailAST)>(aAST);

        goto label2;

     label1:
        if 10 != tokenType goto label2;

        countable = specialinvoke this.<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: boolean isVariableDefCountable(com.puppycrawl.tools.checkstyle.api.DetailAST)>(aAST);

     label2:
        return countable;
    }

    private boolean isVariableDefCountable(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, prevSibling, $r0;
        boolean countable, $z0;
        int parentType, $i0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        countable = 0;

        $r0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getParent()>();

        parentType = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if 7 == parentType goto label1;

        if 6 != parentType goto label5;

     label1:
        prevSibling = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getPreviousSibling()>();

        if prevSibling == null goto label2;

        $i0 = virtualinvoke prevSibling.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if 75 == $i0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        countable = $z0;

     label5:
        return countable;
    }

    private boolean isExpressionCountable(com.puppycrawl.tools.checkstyle.api.DetailAST)
    {
        com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck this;
        com.puppycrawl.tools.checkstyle.api.DetailAST aAST, prevSibling, $r0;
        boolean countable, $z0;
        int parentType, $i0;

        this := @this: com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck;

        aAST := @parameter0: com.puppycrawl.tools.checkstyle.api.DetailAST;

        $r0 = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getParent()>();

        parentType = virtualinvoke $r0.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        lookupswitch(parentType)
        {
            case 7: goto label1;
            case 22: goto label1;
            case 85: goto label1;
            case 86: goto label1;
            case 87: goto label1;
            case 93: goto label1;
            case 94: goto label1;
            default: goto label5;
        };

     label1:
        prevSibling = virtualinvoke aAST.<com.puppycrawl.tools.checkstyle.api.DetailAST: com.puppycrawl.tools.checkstyle.api.DetailAST getPreviousSibling()>();

        if prevSibling == null goto label2;

        $i0 = virtualinvoke prevSibling.<com.puppycrawl.tools.checkstyle.api.DetailAST: int getType()>();

        if 77 == $i0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        countable = $z0;

        goto label6;

     label5:
        countable = 0;

     label6:
        return countable;
    }

    public static void <clinit>()
    {
        <com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int METHOD_MAX_NCSS> = 50;

        <com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int CLASS_MAX_NCSS> = 1500;

        <com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck: int FILE_MAX_NCSS> = 2000;

        return;
    }
}
